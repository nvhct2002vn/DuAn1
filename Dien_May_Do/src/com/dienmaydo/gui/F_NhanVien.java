/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dienmaydo.gui;

import com.dienmaydo.entity.NhanVien;
import com.dienmaydo.service.NhanVienService;
import com.dienmaydo.utils.Auth;
import com.dienmaydo.utils.Msgbox;
import com.dienmaydo.utils.XDate;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lethu
 */
public class F_NhanVien extends javax.swing.JInternalFrame {

    NhanVienService daoNV = new NhanVienService();
    int row = -1;
    boolean Loc;
    boolean LocGT;
    String GanChu;

    /**
     * Creates new form F_NhanVien
     */
    DefaultComboBoxModel model_combo;

    public F_NhanVien() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        FillTable();
        FillTableNghiViec();
        rdoDangLamViec.setSelected(true);
        rdNam.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        txtManv = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTennv = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbbVaitro = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtDiachi = new javax.swing.JTextField();
        txtDienthoai = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtNgaysinh = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        rdNam = new javax.swing.JRadioButton();
        rdNu = new javax.swing.JRadioButton();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnLammoi = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtMatKhau = new javax.swing.JTextField();
        rdoDangLamViec = new javax.swing.JRadioButton();
        rdoNghiViec = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        cbbGTLoc = new javax.swing.JComboBox<>();
        cbbVaiTRoLoc = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbBang = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbBangNghiViec = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1146, 768));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thiết lập thông tin nhân viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        txtManv.setEditable(false);
        txtManv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtManvActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Mã NV");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Tên NV");

        txtTennv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTennvActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Vai trò");

        cbbVaitro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quản lý", "Nhân viên" }));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Địa chỉ");

        txtDiachi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiachiActionPerformed(evt);
            }
        });

        txtDienthoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDienthoaiActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Điện thoại");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Ngày sinh");

        txtNgaysinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNgaysinhActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Giới tính");

        buttonGroup1.add(rdNam);
        rdNam.setSelected(true);
        rdNam.setText("Nam");

        buttonGroup1.add(rdNu);
        rdNu.setText("Nữ");

        btnThem.setBackground(new java.awt.Color(255, 204, 0));
        btnThem.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setBackground(new java.awt.Color(255, 204, 0));
        btnSua.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnLammoi.setBackground(new java.awt.Color(255, 204, 0));
        btnLammoi.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnLammoi.setText("Làm mới");
        btnLammoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLammoiActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Trạng thái");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Mật khẩu");

        txtMatKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMatKhauActionPerformed(evt);
            }
        });

        buttonGroup2.add(rdoDangLamViec);
        rdoDangLamViec.setText("Đang làm việc");

        buttonGroup2.add(rdoNghiViec);
        rdoNghiViec.setText("Nghỉ việc");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Email:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(376, 376, 376)
                .addComponent(btnThem)
                .addGap(18, 18, 18)
                .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLammoi)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(47, 47, 47))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addGap(43, 43, 43)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3))))
                        .addGap(33, 33, 33)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbbVaitro, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtManv, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addComponent(txtMatKhau)
                    .addComponent(txtDiachi)
                    .addComponent(txtTennv))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 211, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)
                            .addComponent(jLabel12))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rdNam, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addComponent(rdNu, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtDienthoai, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                            .addComponent(txtNgaysinh)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rdoDangLamViec)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rdoNghiViec))
                            .addComponent(txtEmail))))
                .addGap(109, 109, 109))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDienthoai, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNgaysinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdNam)
                            .addComponent(jLabel6)
                            .addComponent(rdNu))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(rdoDangLamViec)
                            .addComponent(rdoNghiViec)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtManv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtTennv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cbbVaitro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtDiachi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnLammoi))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Lọc"));

        cbbGTLoc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cbbGTLoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Nam", "Nữ" }));
        cbbGTLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbGTLocActionPerformed(evt);
            }
        });

        cbbVaiTRoLoc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cbbVaiTRoLoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Quản Lý", "Nhân Viên" }));
        cbbVaiTRoLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbVaiTRoLocActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Lọc theo giới tính");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Lọc theo vai trò");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(cbbGTLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                .addComponent(jLabel11)
                .addGap(39, 39, 39)
                .addComponent(cbbVaiTRoLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbGTLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbbVaiTRoLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Tìm kiếm"));
        jPanel4.setToolTipText("");

        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
        );

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setOpaque(true);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        tbBang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã NV", "Mật khẩu", "Tên NV", "Vai trò", "Địa chỉ", "Điện thoại", "Ngày sinh", "Giới tính", "Email", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbBang.setRowHeight(20);
        tbBang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbBangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbBang);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1074, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Đang làm việc", jPanel5);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        tbBangNghiViec.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã NV", "Mật khẩu", "Tên NV", "Vai trò", "Địa chỉ", "Điện thoại", "Ngày sinh", "Giới tính", "Email", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbBangNghiViec.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbBangNghiViecMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbBangNghiViec);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1074, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Nghỉ việc", jPanel6);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(836, 836, 836)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTabbedPane1)
                        .addGap(1085, 1085, 1085)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1146, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtManvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtManvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtManvActionPerformed

    private void txtTennvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTennvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTennvActionPerformed

    private void txtDiachiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiachiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDiachiActionPerformed

    private void txtDienthoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDienthoaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDienthoaiActionPerformed

    private void txtNgaysinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNgaysinhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNgaysinhActionPerformed

    private void txtMatKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMatKhauActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMatKhauActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        if (Msgbox.confirm(this, "Bạn có muốn thêm nhân viên không?")) {
            if (isValidate()) {
                return;
            } else if (checkTrung()) {
                Msgbox.alert(this, "SDT nhân viên đã tồn tại!");
                return;
            } else {
                Them();
            }
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        int chonNhanVien = tbBang.getSelectedRow();
        if (chonNhanVien < 0) {
            Msgbox.alert(this, "Vui lòng chọn nhân viên để sửa!");
        } else {
            if (Msgbox.confirm(this, "Bạn có muốn sửa nhân viên không?")) {
                if (isValidate()) {
                    return;
                } else {
                    Sua();
                }
            }
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        // TODO add your handling code here:
        TimKiem();
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void cbbGTLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbGTLocActionPerformed
        // TODO add your handling code here:
        GanChu = (String) cbbGTLoc.getSelectedItem();
        if (GanChu.equals(" ")) {

            FillTable();

        }
        if (GanChu.equals("Nam")) {
            LocGT = true;
            cbbVaiTRoLoc.setSelectedIndex(0);
            LocNamFillTable();

        }
        if (GanChu.equals("Nữ")) {
            LocGT = false;
            cbbVaiTRoLoc.setSelectedIndex(0);
            LocNamFillTable();

        }
    }//GEN-LAST:event_cbbGTLocActionPerformed

    private void cbbVaiTRoLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbVaiTRoLocActionPerformed
        // TODO add your handling code here:
        String GanChuVT = (String) cbbVaiTRoLoc.getSelectedItem();
        if (GanChuVT.equals(" ")) {
            FillTable();
        }
        if (GanChuVT.equals("Quản Lý")) {
            Loc = true;
            cbbGTLoc.setSelectedIndex(0);
            LocFillTable();
        }
        if (GanChuVT.equals("Nhân Viên")) {
            Loc = false;
            cbbGTLoc.setSelectedIndex(0);
            LocFillTable();
        }
    }//GEN-LAST:event_cbbVaiTRoLocActionPerformed


    private void tbBangNghiViecMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbBangNghiViecMouseClicked
        clickTableNghiViec();
        // TODO add your handling code here:
    }//GEN-LAST:event_tbBangNghiViecMouseClicked

    private void tbBangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbBangMouseClicked
        clickTable();
        // TODO add your handling code here:
    }//GEN-LAST:event_tbBangMouseClicked

    private void btnLammoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLammoiActionPerformed
        LamMoi();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLammoiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLammoi;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JComboBox<String> cbbGTLoc;
    private javax.swing.JComboBox<String> cbbVaiTRoLoc;
    private javax.swing.JComboBox<String> cbbVaitro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton rdNam;
    private javax.swing.JRadioButton rdNu;
    private javax.swing.JRadioButton rdoDangLamViec;
    private javax.swing.JRadioButton rdoNghiViec;
    private javax.swing.JTable tbBang;
    private javax.swing.JTable tbBangNghiViec;
    private javax.swing.JTextField txtDiachi;
    private javax.swing.JTextField txtDienthoai;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtManv;
    private javax.swing.JTextField txtMatKhau;
    private javax.swing.JTextField txtNgaysinh;
    private javax.swing.JTextField txtTennv;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables

    public void FillTable() {
        DefaultTableModel model = (DefaultTableModel) tbBang.getModel();
        model.setRowCount(0);
        List<NhanVien> listNV = daoNV.selectAll();
        for (NhanVien x : listNV) {
            if (x.isTrangThai() == true) {
                model.addRow(new Object[]{
                    x.getMaNV(), x.getMatKhau(), x.getTenNV(), x.isVaiTro() ? "Quản lý" : "Nhân viên", x.getDiaChi(), x.getDienThoai(), XDate.toString(x.getNgaySinh()),
                    x.isGioiTinh() ? "Nam" : "Nữ", x.getEmail(), x.isTrangThai() ? "Đang làm việc" : "Nghỉ việc"
                });
            }
        }
    }
//hello

    public void FillTableNghiViec() {
        DefaultTableModel model = (DefaultTableModel) tbBangNghiViec.getModel();
        model.setRowCount(0);
        List<NhanVien> listNV = daoNV.selectAll();
        for (NhanVien x : listNV) {
            if (x.isTrangThai() == false) {
                model.addRow(new Object[]{
                    x.getMaNV(), x.getMatKhau(), x.getTenNV(), x.isVaiTro() ? "Quản lý" : "Nhân viên", x.getDiaChi(), x.getDienThoai(), x.getNgaySinh(), XDate.toString(x.getNgaySinh()),
                    x.isGioiTinh() ? "Nam" : "Nữ", x.getEmail(), x.isTrangThai() ? "Đang làm việc" : "Nghỉ việc"
                });
            }
        }
    }

    boolean checkTrung() {
        boolean check = false;
        List<NhanVien> list = daoNV.selectAll();
        for (int i = 0; i < list.size(); i++) {
            if (list.get(i).getDienThoai().equalsIgnoreCase(txtDienthoai.getText())) {
                check = true;
                break;
            }
        }
        return check;
    }

    boolean isValidate() {
        try {
            String dinhDangEmail = "\\w+@\\w+(\\.\\w+){1,2}";
            String dinhDangSDT = "0\\d{9}";
            if (!txtDienthoai.getText().matches(dinhDangSDT)) {
                Msgbox.alert(this, "Vui lòng nhập đúng định dạng số điện thoại");
                return true;
            } else if (!txtEmail.getText().matches(dinhDangEmail)) {
                Msgbox.alert(this, "Vui lòng nhập đúng định dạng Email");
                return true;
            } else if (txtTennv.getText().trim().equals("")) {
                Msgbox.alert(this, "Tên nhân viên không được để trống");
                return true;
            } else if (txtDiachi.getText().trim().equals("")) {
                Msgbox.alert(this, "Địa chỉ khách nhân viên không được để trống");
                return true;
            } else if (txtDienthoai.getText().trim().equals("")) {
                Msgbox.alert(this, "Số điện thoại nhân viên không được để trống");
                return true;
            } else if (txtDienthoai.getText().length() > 15) {
                Msgbox.alert(this, "Số điện thoại tối đa 15 kí tự");
                return true;
            } else if (txtMatKhau.getText().trim().equals("")) {
                Msgbox.alert(this, "Mật khẩu nhân viên không được để trống");
                return true;
            } else if (txtNgaysinh.getText().trim().equals("")) {
                Msgbox.alert(this, "Ngày sinh nhân viên không được để trống");
                return true;
            } else if (checkNgay() == false) {
                Msgbox.alert(this, "Vui lòng nhập đúng định dạng dd-mm-yyyy!");
                return true;
            } else {
                return false;
            }
        } catch (Exception e) {

            e.printStackTrace();
            return true;
        }
    }

    public boolean checkNgay() {
        boolean check = false;
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("dd-mm-yyyy");
            Date d = sdf.parse(txtNgaysinh.getText());
            check = true;
        } catch (Exception e) {
        }
        return check;
    }
//    public void lamMoi() {
//        txtManv.setText("");
//        txtTennv.setText("");
//        txtDienthoai.setText("");
//        txtMatKhau.setText("");
//        txtDiachi.setText("");
//        rdNam.setSelected(true);
//        cbbVaitro.setSelectedIndex(0);
//        txtNgaysinh.setText("");
//        int row;
//        row = -1;
//        txtManv.setEditable(true);
//        rdoDangLamViec.setSelected(true);
//    }

    public void Them() {
        try {
            if (!Auth.isManager()) {
                Msgbox.alert(this, "Bạn không có quyền thêm nhân viên!");
            } else {
                try {
                    NhanVien nv = getFormInsert();
                    daoNV.insertData(nv);
                    FillTable();
                    FillTableNghiViec();
                    LamMoi();
                    Msgbox.alert(this, "Thêm thành công");
                } catch (Exception e) {
                    e.printStackTrace();  //in ra lỗi
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void Sua() {
        try {
            if (!Auth.isManager()) {
                Msgbox.alert(this, "Bạn không có quyền sửa nhân viên!");
            } else {
                try {
                    NhanVien nv = getForm();
                    daoNV.updateData(nv);
                    FillTable();
                    FillTableNghiViec();
                    LamMoi();
                    Msgbox.alert(this, "Sửa thành công");
                } catch (Exception e) {
                    e.printStackTrace();  //in ra lỗi
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    NhanVien getFormInsert() {
        NhanVien nv = new NhanVien();
        List<NhanVien> slnv = daoNV.selectAll();
        int row = slnv.size();
        nv.setMaNV("NV00" + (row + 1));
        nv.setVaiTro(cbbVaitro.getSelectedIndex() == 0 ? true : false);
        nv.setTenNV(txtTennv.getText());
        nv.setMatKhau(txtMatKhau.getText());
        nv.setTrangThai(rdoDangLamViec.isSelected());
        nv.setDiaChi(txtDiachi.getText());
        nv.setGioiTinh(rdNam.isSelected());
        nv.setDienThoai(txtDienthoai.getText());
        nv.setEmail(txtEmail.getText());
        nv.setNgaySinh(XDate.toDate(txtNgaysinh.getText()));
        return nv;
    }

    NhanVien getForm() {
        NhanVien nv = new NhanVien();
        nv.setMaNV(txtManv.getText());
        nv.setVaiTro(cbbVaitro.getSelectedIndex() == 0 ? true : false);
        nv.setTenNV(txtTennv.getText());
        nv.setMatKhau(txtMatKhau.getText());
        nv.setTrangThai(rdoDangLamViec.isSelected());
        nv.setDiaChi(txtDiachi.getText());
        nv.setGioiTinh(rdNam.isSelected());
        nv.setDienThoai(txtDienthoai.getText());
        nv.setEmail(txtEmail.getText());
        nv.setNgaySinh(XDate.toDate(txtNgaysinh.getText()));
        return nv;
    }

    void clickTable() {
        int vitri = tbBang.getSelectedRow();
        txtManv.setText((String) tbBang.getValueAt(vitri, 0));
        txtMatKhau.setText((String) tbBang.getValueAt(vitri, 1));
        txtTennv.setText((String) tbBang.getValueAt(vitri, 2));
        String vaiTro = (String) tbBang.getValueAt(vitri, 3);
        if (vaiTro.equals("Quản lý")) {
            cbbVaitro.setSelectedIndex(0);
        } else {
            cbbVaitro.setSelectedIndex(1);
        }
        txtDiachi.setText((String) tbBang.getValueAt(vitri, 4));
        txtDienthoai.setText((String) tbBang.getValueAt(vitri, 5));
        txtEmail.setText((String) tbBang.getValueAt(vitri, 8));
        String NgaySinh = String.valueOf(tbBang.getValueAt(vitri, 6));
        txtNgaysinh.setText(NgaySinh);
        String gt = ((String) tbBang.getValueAt(vitri, 7));
        if (gt.equals("Nam")) {
            rdNam.setSelected(true);
        } else {
            rdNu.setSelected(true);
        }
        String trangThaiViecLam = tbBang.getValueAt(vitri, 9).toString();
        if (trangThaiViecLam.equals("Đang làm việc")) {
            rdoDangLamViec.setSelected(true);
        } else {
            rdoNghiViec.setSelected(true);
        }
    }

    void TimKiem() {
        DefaultTableModel Model = (DefaultTableModel) tbBang.getModel();
        Model.setRowCount(0);
        List<NhanVien> SNV = daoNV.selectByTimKiem(txtTimKiem.getText());
        for (NhanVien x : SNV) {
            Model.addRow(new Object[]{
                x.getMaNV(), x.getMatKhau(), x.getTenNV(), x.isVaiTro() ? "Quản lý" : "Nhân viên", x.getDiaChi(), x.getDienThoai(), x.getNgaySinh(), XDate.toString(x.getNgaySinh()),
                x.isGioiTinh() ? "Nam" : "Nữ", x.getEmail(), x.isTrangThai() ? "Đang làm việc" : "Nghỉ việc"
            });
        }
    }

    public void LocFillTable() {
        DefaultTableModel model = (DefaultTableModel) tbBang.getModel();
        model.setRowCount(0);
        List<NhanVien> listNV = daoNV.selectAll();
        for (NhanVien x : listNV) {
            if (x.isVaiTro() == Loc) {
                model.addRow(new Object[]{
                    x.getMaNV(), x.getMatKhau(), x.getTenNV(), x.isVaiTro() ? "Quản lý" : "Nhân viên", x.getDiaChi(), x.getDienThoai(), x.getNgaySinh(), XDate.toString(x.getNgaySinh()),
                    x.isGioiTinh() ? "Nam" : "Nữ", x.getEmail(), x.isTrangThai() ? "Đang làm việc" : "Nghỉ việc"
                });
            }
        }
    }

    public void LocNamFillTable() {
        DefaultTableModel model = (DefaultTableModel) tbBang.getModel();
        model.setRowCount(0);
        List<NhanVien> listNV = daoNV.selectAll();
        System.out.println(listNV);
        for (NhanVien x : listNV) {
            if (x.isGioiTinh() == LocGT) {
                model.addRow(new Object[]{
                    x.getMaNV(), x.getMatKhau(), x.getTenNV(), x.isVaiTro() ? "Quản lý" : "Nhân viên", x.getDiaChi(), x.getDienThoai(), x.getNgaySinh(), XDate.toString(x.getNgaySinh()),
                    x.isGioiTinh() ? "Nam" : "Nữ", x.getEmail(), x.isTrangThai() ? "Đang làm việc" : "Nghỉ việc"
                });
            }
        }
    }

    private void clickTableNghiViec() {
        int vitri = tbBangNghiViec.getSelectedRow();
        txtManv.setText((String) tbBangNghiViec.getValueAt(vitri, 0));
        txtMatKhau.setText((String) tbBangNghiViec.getValueAt(vitri, 1));
        txtTennv.setText((String) tbBangNghiViec.getValueAt(vitri, 2));
        String vaiTro = (String) tbBangNghiViec.getValueAt(vitri, 3);
        if (vaiTro.equals("Quản lý")) {
            cbbVaitro.setSelectedIndex(0);
        } else {
            cbbVaitro.setSelectedIndex(1);
        }
        txtDiachi.setText((String) tbBangNghiViec.getValueAt(vitri, 4));
        txtDienthoai.setText((String) tbBangNghiViec.getValueAt(vitri, 5));
        txtEmail.setText((String) tbBang.getValueAt(vitri, 8));
        String NgaySinh = String.valueOf(tbBangNghiViec.getValueAt(vitri, 6));
        txtNgaysinh.setText(NgaySinh);
        String gt = ((String) tbBangNghiViec.getValueAt(vitri, 7));
        if (gt.equals("Nam")) {
            rdNam.setSelected(true);
        } else {
            rdNu.setSelected(true);
        }
        String trangThaiViecLam = tbBangNghiViec.getValueAt(vitri, 9).toString();
        if (trangThaiViecLam.equals("Đang làm việc")) {
            rdoDangLamViec.setSelected(true);
        } else {
            rdoNghiViec.setSelected(true);
        }
    }

    private void LamMoi() {
        txtManv.setText("");
        txtMatKhau.setText("");
        txtTennv.setText("");
        cbbVaitro.setSelectedIndex(0);
        txtDiachi.setText("");
        txtDienthoai.setText("");
        txtEmail.setText("");
        txtNgaysinh.setText("");
        rdNam.setSelected(true);
        rdoDangLamViec.setSelected(true);
    }
}
