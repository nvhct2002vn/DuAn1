/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dienmaydo.gui;

import com.dienmaydo.entity.HoaDon;
import com.dienmaydo.entity.KhachHang;
import com.dienmaydo.service.DanhMucService;
import com.dienmaydo.service.HoaDonService;
import com.dienmaydo.service.KhachHangService;
import com.dienmaydo.service.ThongKeService;
import com.dienmaydo.utils.Auth;
import com.dienmaydo.utils.Msgbox;
import com.dienmaydo.utils.XMoney;
import java.awt.CardLayout;
import java.util.List;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import java.time.LocalDate;
import java.time.LocalTime;

/**
 *
 * @author VINH
 */
public class F_ThongKe extends javax.swing.JInternalFrame {

    CardLayout cardCbb;

    /**
     * Creates new form F_ThongKe
     */
    public F_ThongKe() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        setResizable(false);

        cardCbb = (CardLayout) paneCardl.getLayout();
        cardCbb.show(paneCardl, "card1");
        radTatCa.setSelected(true);

        doanhThu();
        soHoaDon();
        soHangHuy();
        tongKH();
        fillTable();
        fillTable2();
        fillCbbNamTK();
        fillCbbDanhMuc();
        fillCbbHangHuy();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblDoanhThu = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        lblHoaDon = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        lblHangHuy = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        lblKhachHang = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        cbbNam = new javax.swing.JComboBox<>();
        jPanel11 = new javax.swing.JPanel();
        cbbDanhMuc = new javax.swing.JComboBox<>();
        jPanel15 = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableTTTK = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableHangHuy = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        cbbNamHangHuy = new javax.swing.JComboBox<>();
        jPanel16 = new javax.swing.JPanel();
        txtTimKiemHoaDonHuy = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        radTatCa = new javax.swing.JRadioButton();
        radThang = new javax.swing.JRadioButton();
        radNam = new javax.swing.JRadioButton();
        paneCardl = new javax.swing.JPanel();
        panel1 = new javax.swing.JPanel();
        panel2 = new javax.swing.JPanel();
        cbbTheoThang = new javax.swing.JComboBox<>();
        panel3 = new javax.swing.JPanel();
        cbbTheoNam = new javax.swing.JComboBox<>();

        setPreferredSize(new java.awt.Dimension(1146, 768));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBackground(new java.awt.Color(255, 204, 0));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon("D:\\FPT\\PRO1041\\SQL\\DuAn1\\Dien_May_Do\\src\\com\\dienmaydo\\icon\\revenue.png")); // NOI18N
        jLabel1.setText("Doanh Thu");

        lblDoanhThu.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblDoanhThu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDoanhThu.setText("0");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("VNĐ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(6, 6, 6))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDoanhThu, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 10.0;
        jPanel2.add(jPanel3, gridBagConstraints);

        jPanel12.setBackground(new java.awt.Color(255, 204, 0));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel13.setIcon(new javax.swing.ImageIcon("D:\\FPT\\PRO1041\\SQL\\DuAn1\\Dien_May_Do\\src\\com\\dienmaydo\\icon\\receipt.png")); // NOI18N
        jLabel13.setText("Số Hóa Đơn");

        lblHoaDon.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblHoaDon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHoaDon.setText("0");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel13)
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 10.0;
        jPanel2.add(jPanel12, gridBagConstraints);

        jPanel13.setBackground(new java.awt.Color(255, 204, 0));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel14.setIcon(new javax.swing.ImageIcon("D:\\FPT\\PRO1041\\SQL\\DuAn1\\Dien_May_Do\\src\\com\\dienmaydo\\icon\\cancelProduct.png")); // NOI18N
        jLabel14.setText("Số Hàng Hủy");

        lblHangHuy.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblHangHuy.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHangHuy.setText("0");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel14)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblHangHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblHangHuy, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 10.0;
        jPanel2.add(jPanel13, gridBagConstraints);

        jPanel14.setBackground(new java.awt.Color(255, 204, 0));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel15.setIcon(new javax.swing.ImageIcon("D:\\FPT\\PRO1041\\SQL\\DuAn1\\Dien_May_Do\\src\\com\\dienmaydo\\icon\\client.png")); // NOI18N
        jLabel15.setText("Tổng Khách Hàng");

        lblKhachHang.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblKhachHang.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblKhachHang.setText("0");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addComponent(lblKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66))))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.weighty = 10.0;
        jPanel2.add(jPanel14, gridBagConstraints);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Năm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        cbbNam.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbbNam.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbNamItemStateChanged(evt);
            }
        });
        cbbNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbNamActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbbNam, 0, 298, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addComponent(cbbNam, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh mục", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        cbbDanhMuc.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbbDanhMuc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbDanhMucItemStateChanged(evt);
            }
        });
        cbbDanhMuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbDanhMucActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbbDanhMuc, 0, 298, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addComponent(cbbDanhMuc, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));
        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm kiếm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        txtTimKiem.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(txtTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addContainerGap())
        );

        tableTTTK.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sản phẩm", "Số lượng", "Giá cao nhất", "Giá thấp nhất", "Doanh thu"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableTTTK);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("     HÀNG HÓA     ", jPanel8);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        tableHangHuy.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hóa đơn", "Tổng tiền", "Hình thức thanh toán", "Ngày lập hóa đơn", "Tên khách hàng", "Ghi chú"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableHangHuy);

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Năm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        cbbNamHangHuy.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbbNamHangHuy.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbbNamHangHuyItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cbbNamHangHuy, 0, 298, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addComponent(cbbNamHangHuy, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));
        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm kiếm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        txtTimKiemHoaDonHuy.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtTimKiemHoaDonHuy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemHoaDonHuyKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTimKiemHoaDonHuy, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(txtTimKiemHoaDonHuy, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1105, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("     HÀNG BỊ HỦY     ", jPanel9);

        jButton1.setBackground(new java.awt.Color(255, 204, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Gửi báo cáo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(341, 341, 341))
        );

        radTatCa.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(radTatCa);
        radTatCa.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radTatCa.setText("Tất Cả");
        radTatCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radTatCaActionPerformed(evt);
            }
        });

        radThang.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(radThang);
        radThang.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radThang.setText("Theo Tháng");
        radThang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radThangActionPerformed(evt);
            }
        });

        radNam.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(radNam);
        radNam.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        radNam.setText("Theo Năm");
        radNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radNamActionPerformed(evt);
            }
        });

        paneCardl.setLayout(new java.awt.CardLayout());

        panel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 115, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );

        paneCardl.add(panel1, "card1");

        panel2.setBackground(new java.awt.Color(255, 255, 255));

        cbbTheoThang.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbbTheoThang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12" }));
        cbbTheoThang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTheoThangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 115, Short.MAX_VALUE)
            .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(cbbTheoThang, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
            .addGroup(panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(cbbTheoThang, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        paneCardl.add(panel2, "card2");

        panel3.setBackground(new java.awt.Color(255, 255, 255));

        cbbTheoNam.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbbTheoNam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Năm 2019", "Năm 2020", "Năm 2021" }));
        cbbTheoNam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTheoNamActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel3Layout = new javax.swing.GroupLayout(panel3);
        panel3.setLayout(panel3Layout);
        panel3Layout.setHorizontalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel3Layout.createSequentialGroup()
                .addComponent(cbbTheoNam, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panel3Layout.setVerticalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cbbTheoNam, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
        );

        paneCardl.add(panel3, "card3");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radNam)
                            .addComponent(radThang))
                        .addGap(27, 27, 27)
                        .addComponent(paneCardl, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(radTatCa))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radTatCa, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(radThang)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radNam))
                    .addComponent(paneCardl, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbbNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbNamActionPerformed

    }//GEN-LAST:event_cbbNamActionPerformed


    private void cbbDanhMucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbDanhMucActionPerformed

    }//GEN-LAST:event_cbbDanhMucActionPerformed

    private void cbbNamItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbNamItemStateChanged
        fillTableTheoNam();
    }//GEN-LAST:event_cbbNamItemStateChanged

    private void cbbDanhMucItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbDanhMucItemStateChanged
        fillTheoDM();
    }//GEN-LAST:event_cbbDanhMucItemStateChanged

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        timKiemSP();
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void txtTimKiemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemKeyPressed

    private void cbbNamHangHuyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbbNamHangHuyItemStateChanged
        fillTableHangHuy();
    }//GEN-LAST:event_cbbNamHangHuyItemStateChanged

    private void txtTimKiemHoaDonHuyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemHoaDonHuyKeyReleased
        timKiemHangHuy();
    }//GEN-LAST:event_txtTimKiemHoaDonHuyKeyReleased

    private void radNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radNamActionPerformed
        cardCbb.show(paneCardl, "card3");
        cbbTheoNam.setSelectedIndex(0);
    }//GEN-LAST:event_radNamActionPerformed

    private void radThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radThangActionPerformed
        cardCbb.show(paneCardl, "card2");
        cbbTheoThang.setSelectedIndex(0);
    }//GEN-LAST:event_radThangActionPerformed

    private void radTatCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radTatCaActionPerformed
        doanhThu();
        soHoaDon();
        soHangHuy();
        tongKH();
        cardCbb.show(paneCardl, "card1");
    }//GEN-LAST:event_radTatCaActionPerformed

    private void cbbTheoThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTheoThangActionPerformed
        fillCbbTheoThang();
    }//GEN-LAST:event_cbbTheoThangActionPerformed

    private void cbbTheoNamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTheoNamActionPerformed
        fillCbbTheoNam();
    }//GEN-LAST:event_cbbTheoNamActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        final String username = "dienmaydo02@gmail.com";
        final String password = "vinhtq2002";

        Properties prop = new Properties();
        prop.put("mail.smtp.host", "smtp.gmail.com");
        prop.put("mail.smtp.port", "587");
        prop.put("mail.smtp.auth", "true");
        prop.put("mail.smtp.starttls.enable", "true");
        // đăng nhập ngầm
        Session session = Session.getInstance(prop,
                new javax.mail.Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(username, password);
            }
        });

        try {
            if (Msgbox.confirm(this, "Bạn muốn gửi báo cáo không ?")) {
                if (Auth.user.getMaNV().equalsIgnoreCase("NV001")) {
                    Message message = new MimeMessage(session);
                    message.setFrom(new InternetAddress("dienmaydo02@gmail.com"));
                    message.setRecipients(
                            Message.RecipientType.TO,
                            InternetAddress.parse("vinhche00@gmail.com")
                    );
                    message.setSubject("Thiều Quang Vinh báo cáo tháng này !");
                    List<Integer> doanhThu = tksv.baoCaoDoanhThuHienTai();
                    List<Integer> hoaDon = tksv.baoCaoSoHDHienTai();
                    List<Integer> hoaDonHuy = tksv.baoCaoSoHDHuyHienTai();
                    List<Integer> khachHang = tksv.baoCaoSoKHHienTai();
                    String dt = "Số doanh thu: " + XMoney.themDauChamCuaVinh(doanhThu.get(0)) + " VNĐ\n";
                    dt += "Số hóa đơn: " + hoaDon.get(0) + "\n";
                    dt += "Số hàng hủy: " + hoaDonHuy.get(0) + "\n";
                    dt += "Số khách hàng: " + khachHang.get(0);
                    message.setText("Thời gian: " + java.time.LocalDate.now() + " " + java.time.LocalTime.now() + "\n\n" + dt);

                    Transport.send(message);
                    Msgbox.alert(this, "Gửi báo cáo thành công !!");
                } else if (Auth.user.getMaNV().equalsIgnoreCase("NV002")) {
                    Message message = new MimeMessage(session);
                    message.setFrom(new InternetAddress("dienmaydo02@gmail.com"));
                    message.setRecipients(
                            Message.RecipientType.TO,
                            InternetAddress.parse("vinhche00@gmail.com")
                    );
                    message.setSubject("Đỗ Tất Hòa báo cáo tháng này !");
                    List<Integer> doanhThu = tksv.baoCaoDoanhThuHienTai();
                    List<Integer> hoaDon = tksv.baoCaoSoHDHienTai();
                    List<Integer> hoaDonHuy = tksv.baoCaoSoHDHuyHienTai();
                    List<Integer> khachHang = tksv.baoCaoSoKHHienTai();
                    String dt = "Số doanh thu: " + XMoney.themDauChamCuaVinh(doanhThu.get(0)) + " VNĐ\n";
                    dt += "Số hóa đơn: " + hoaDon.get(0) + "\n";
                    dt += "Số hàng hủy: " + hoaDonHuy.get(0) + "\n";
                    dt += "Số khách hàng: " + khachHang.get(0);
                    message.setText("Thời gian: " + java.time.LocalDate.now() + " " + java.time.LocalTime.now() + "\n\n" + dt);

                    Transport.send(message);
                    Msgbox.alert(this, "Gửi báo cáo thành công !!");
                } else if (Auth.user.getMaNV().equalsIgnoreCase("NV003")) {
                    Message message = new MimeMessage(session);
                    message.setFrom(new InternetAddress("dienmaydo02@gmail.com"));
                    message.setRecipients(
                            Message.RecipientType.TO,
                            InternetAddress.parse("vinhche00@gmail.com")
                    );
                    message.setSubject("Nguyễn Viết Hiên báo cáo tháng này !");
                    List<Integer> doanhThu = tksv.baoCaoDoanhThuHienTai();
                    List<Integer> hoaDon = tksv.baoCaoSoHDHienTai();
                    List<Integer> hoaDonHuy = tksv.baoCaoSoHDHuyHienTai();
                    List<Integer> khachHang = tksv.baoCaoSoKHHienTai();
                    String dt = "Số doanh thu: " + XMoney.themDauChamCuaVinh(doanhThu.get(0)) + " VNĐ\n";
                    dt += "Số hóa đơn: " + hoaDon.get(0) + "\n";
                    dt += "Số hàng hủy: " + hoaDonHuy.get(0) + "\n";
                    dt += "Số khách hàng: " + khachHang.get(0);
                    message.setText("Thời gian: " + java.time.LocalDate.now() + " " + java.time.LocalTime.now() + "\n\n" + dt);

                    Transport.send(message);
                    Msgbox.alert(this, "Gửi báo cáo thành công !!");
                } else if (Auth.user.getMaNV().equalsIgnoreCase("NV004")) {
                    Message message = new MimeMessage(session);
                    message.setFrom(new InternetAddress("dienmaydo02@gmail.com"));
                    message.setRecipients(
                            Message.RecipientType.TO,
                            InternetAddress.parse("vinhche00@gmail.com")
                    );
                    message.setSubject("Lê Thị Ngọc Thúy báo cáo tháng này !");
                    List<Integer> doanhThu = tksv.baoCaoDoanhThuHienTai();
                    List<Integer> hoaDon = tksv.baoCaoSoHDHienTai();
                    List<Integer> hoaDonHuy = tksv.baoCaoSoHDHuyHienTai();
                    List<Integer> khachHang = tksv.baoCaoSoKHHienTai();
                    String dt = "Số doanh thu: " + XMoney.themDauChamCuaVinh(doanhThu.get(0)) + " VNĐ\n";
                    dt += "Số hóa đơn: " + hoaDon.get(0) + "\n";
                    dt += "Số hàng hủy: " + hoaDonHuy.get(0) + "\n";
                    dt += "Số khách hàng: " + khachHang.get(0);
                    message.setText("Thời gian: " + java.time.LocalDate.now() + " " + java.time.LocalTime.now() + "\n\n" + dt);

                    Transport.send(message);
                    Msgbox.alert(this, "Gửi báo cáo thành công !!");
                } else if (Auth.user.getMaNV().equalsIgnoreCase("NV005")) {
                    Message message = new MimeMessage(session);
                    message.setFrom(new InternetAddress("dienmaydo02@gmail.com"));
                    message.setRecipients(
                            Message.RecipientType.TO,
                            InternetAddress.parse("vinhche00@gmail.com")
                    );
                    message.setSubject("Lê Thành Vinh báo cáo tháng này !");
                    List<Integer> doanhThu = tksv.baoCaoDoanhThuHienTai();
                    List<Integer> hoaDon = tksv.baoCaoSoHDHienTai();
                    List<Integer> hoaDonHuy = tksv.baoCaoSoHDHuyHienTai();
                    List<Integer> khachHang = tksv.baoCaoSoKHHienTai();
                    String dt = "Số doanh thu: " + XMoney.themDauChamCuaVinh(doanhThu.get(0)) + " VNĐ\n";
                    dt += "Số hóa đơn: " + hoaDon.get(0) + "\n";
                    dt += "Số hàng hủy: " + hoaDonHuy.get(0) + "\n";
                    dt += "Số khách hàng: " + khachHang.get(0);
                    message.setText("Thời gian: " + java.time.LocalDate.now() + " " + java.time.LocalTime.now() + "\n\n" + dt);

                    Transport.send(message);
                    Msgbox.alert(this, "Gửi báo cáo thành công !!");
                } else if (Auth.user.getMaNV().equalsIgnoreCase("NV006")) {
                    Message message = new MimeMessage(session);
                    message.setFrom(new InternetAddress("dienmaydo02@gmail.com"));
                    message.setRecipients(
                            Message.RecipientType.TO,
                            InternetAddress.parse("vinhche00@gmail.com")
                    );
                    message.setSubject("Nguyễn Hồng Sơn báo cáo tháng này !");
                    List<Integer> doanhThu = tksv.baoCaoDoanhThuHienTai();
                    List<Integer> hoaDon = tksv.baoCaoSoHDHienTai();
                    List<Integer> hoaDonHuy = tksv.baoCaoSoHDHuyHienTai();
                    List<Integer> khachHang = tksv.baoCaoSoKHHienTai();
                    String dt = "Số doanh thu: " + XMoney.themDauChamCuaVinh(doanhThu.get(0)) + " VNĐ\n";
                    dt += "Số hóa đơn: " + hoaDon.get(0) + "\n";
                    dt += "Số hàng hủy: " + hoaDonHuy.get(0) + "\n";
                    dt += "Số khách hàng: " + khachHang.get(0);
                    message.setText("Thời gian: " + java.time.LocalDate.now() + " " + java.time.LocalTime.now() + "\n\n" + dt);

                    Transport.send(message);
                    Msgbox.alert(this, "Gửi báo cáo thành công !!");
                }
            }

        } catch (MessagingException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbbDanhMuc;
    private javax.swing.JComboBox<String> cbbNam;
    private javax.swing.JComboBox<String> cbbNamHangHuy;
    private javax.swing.JComboBox<String> cbbTheoNam;
    private javax.swing.JComboBox<String> cbbTheoThang;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblDoanhThu;
    private javax.swing.JLabel lblHangHuy;
    private javax.swing.JLabel lblHoaDon;
    private javax.swing.JLabel lblKhachHang;
    private javax.swing.JPanel paneCardl;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panel2;
    private javax.swing.JPanel panel3;
    private javax.swing.JRadioButton radNam;
    private javax.swing.JRadioButton radTatCa;
    private javax.swing.JRadioButton radThang;
    private javax.swing.JTable tableHangHuy;
    private javax.swing.JTable tableTTTK;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JTextField txtTimKiemHoaDonHuy;
    // End of variables declaration//GEN-END:variables

    HoaDonService hdsv = new HoaDonService();
    KhachHangService khsv = new KhachHangService();
    DanhMucService dmsv = new DanhMucService();
    ThongKeService tksv = new ThongKeService();

    public void doanhThu() {
        try {
            List<Integer> list = hdsv.selectDoanhThu();
            for (Integer doanhThu : list) {
                lblDoanhThu.setText(XMoney.themDauCham(doanhThu));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void soHoaDon() {
        try {
            List<Integer> list = hdsv.selectSoHoaDon();
            for (Integer hoaDon : list) {
                lblHoaDon.setText(hoaDon.toString());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void soHangHuy() {
        try {
            List<Integer> list = hdsv.selectSoHangHuy();
            for (Integer soHH : list) {
                lblHangHuy.setText(soHH.toString());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void tongKH() {
        try {
            List<Integer> list = khsv.selectTongKhachHang();
            for (Integer khachHang : list) {
                lblKhachHang.setText(khachHang.toString());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tableTTTK.getModel();
        model.setRowCount(0);
        List<Object[]> list = tksv.getTableThongKe();
        for (Object[] tk : list) {
            model.addRow(tk);
        }
    }

    public void fillTable2() {
        DefaultTableModel model = (DefaultTableModel) tableHangHuy.getModel();
        model.setRowCount(0);
        List<Object[]> list = tksv.getTableHangHuy();
        for (Object[] hh : list) {
            model.addRow(hh);
        }

    }

    public void fillCbbNamTK() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbbNam.getModel();
        model.addElement(null);
        List<Integer> list = hdsv.selectYears();
        for (Integer year : list) {
            model.addElement(year);
        }
    }

    public void fillCbbDanhMuc() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbbDanhMuc.getModel();
        model.addElement(null);
        List<String> list = dmsv.selectDanhMuc();
        for (String danhMuc : list) {
            model.addElement(danhMuc);
        }
    }

    public void fillCbbHangHuy() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cbbNamHangHuy.getModel();
        model.addElement(null);
        List<Integer> list = hdsv.selectYears();
        for (Integer year : list) {
            model.addElement(year);
        }
    }

    public void fillTableTheoNam() {
        try {
            if (cbbNam.getSelectedItem() == null) {
                fillTable();
            } else if (cbbNam.getSelectedIndex() > 0) {
                DefaultTableModel model = (DefaultTableModel) tableTTTK.getModel();
                model.setRowCount(0);
                int nam = Integer.parseInt(cbbNam.getSelectedItem().toString());
                List<Object[]> list = tksv.getThongKe(nam);
                for (Object[] row : list) {
                    model.addRow(row);
                }
                cbbDanhMuc.setSelectedIndex(0);
                txtTimKiem.setText("");
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public void fillTheoDM() {
        try {
            if (cbbDanhMuc.getSelectedItem() == null) {
                fillTable();
            } else if (cbbDanhMuc.getSelectedIndex() > 0) {
                DefaultTableModel model = (DefaultTableModel) tableTTTK.getModel();
                model.setRowCount(0);
                String danhMuc = (String) cbbDanhMuc.getSelectedItem();
                List<Object[]> list = tksv.getThongKeTheoDM(danhMuc);
                for (Object[] rows : list) {
                    model.addRow(rows);
                }

            }
            cbbNam.setSelectedIndex(0);
            txtTimKiem.setText("");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void timKiemSP() {
        if (txtTimKiem.getText().equalsIgnoreCase("")) {
            fillTable();
        } else {
            DefaultTableModel model = (DefaultTableModel) tableTTTK.getModel();
            model.setRowCount(0);
            String tim = txtTimKiem.getText();
            List<Object[]> list = tksv.selectByTimKiem(tim);
            for (Object[] rowTim : list) {
                model.addRow(rowTim);
            }
        }
        cbbNam.setSelectedIndex(0);
        cbbDanhMuc.setSelectedIndex(0);
    }

    public void fillTableHangHuy() {
        if (cbbNamHangHuy.getSelectedItem() == null) {
            fillTable2();
        } else {
            DefaultTableModel model = (DefaultTableModel) tableHangHuy.getModel();
            model.setRowCount(0);
            int namHuy = Integer.parseInt(cbbNamHangHuy.getSelectedItem().toString());
            List<Object[]> list = tksv.getHangHuy(namHuy);
            for (Object[] hh : list) {
                model.addRow(hh);
            }
        }
        txtTimKiemHoaDonHuy.setText("");
    }

    public void timKiemHangHuy() {
        if (txtTimKiemHoaDonHuy.getText().equalsIgnoreCase("")) {
            fillTable2();
        } else {
            DefaultTableModel model = (DefaultTableModel) tableHangHuy.getModel();
            model.setRowCount(0);
            String tim = txtTimKiemHoaDonHuy.getText();
            List<Object[]> list = tksv.selectTimKiemToHangHuy(tim);
            for (Object[] hhTim : list) {
                model.addRow(hhTim);
            }
        }
        cbbNamHangHuy.setSelectedIndex(0);
    }

    public void fillCbbTheoThang() {
        try {
            if (cbbTheoThang.getSelectedIndex() == 0) {
                List<Integer> doanhThu = tksv.selectDoanhThuTheoThang1();
                for (Integer dt : doanhThu) {
                    lblDoanhThu.setText(XMoney.themDauCham(dt));
                }
                List<Integer> hoaDon = tksv.selectHDTheoThang1();
                for (Integer hd : hoaDon) {
                    lblHoaDon.setText(hd.toString());
                }
                List<Integer> hoaDonHuy = tksv.selectHDHuyTheoThang1();
                for (Integer hdHuy : hoaDonHuy) {
                    lblHangHuy.setText(hdHuy.toString());
                }
                List<Integer> khachHang = tksv.selectKHTheoThang1();
                for (Integer kh : khachHang) {
                    lblKhachHang.setText(kh.toString());
                }
            } else if (cbbTheoThang.getSelectedIndex() == 1) {
                List<Integer> doanhThu = tksv.selectDoanhThuTheoThang2();
                for (Integer dt : doanhThu) {
                    lblDoanhThu.setText(XMoney.themDauCham(dt));
                }
                List<Integer> hoaDon = tksv.selectHDTheoThang2();
                for (Integer hd : hoaDon) {
                    lblHoaDon.setText(hd.toString());
                }
                List<Integer> hoaDonHuy = tksv.selectHDHuyTheoThang2();
                for (Integer hdHuy : hoaDonHuy) {
                    lblHangHuy.setText(hdHuy.toString());
                }
                List<Integer> khachHang = tksv.selectKHTheoThang2();
                for (Integer kh : khachHang) {
                    lblKhachHang.setText(kh.toString());
                }
            } else if (cbbTheoThang.getSelectedIndex() == 2) {
                List<Integer> doanhThu = tksv.selectDoanhThuTheoThang3();
                for (Integer dt : doanhThu) {
                    lblDoanhThu.setText(XMoney.themDauCham(dt));
                }
                List<Integer> hoaDon = tksv.selectHDTheoThang3();
                for (Integer hd : hoaDon) {
                    lblHoaDon.setText(hd.toString());
                }
                List<Integer> hoaDonHuy = tksv.selectHDHuyTheoThang3();
                for (Integer hdHuy : hoaDonHuy) {
                    lblHangHuy.setText(hdHuy.toString());
                }
                List<Integer> khachHang = tksv.selectKHTheoThang3();
                for (Integer kh : khachHang) {
                    lblKhachHang.setText(kh.toString());
                }
            } else if (cbbTheoThang.getSelectedIndex() == 3) {
                List<Integer> doanhThu = tksv.selectDoanhThuTheoThang4();
                for (Integer dt : doanhThu) {
                    lblDoanhThu.setText(XMoney.themDauCham(dt));
                }
                List<Integer> hoaDon = tksv.selectHDTheoThang4();
                for (Integer hd : hoaDon) {
                    lblHoaDon.setText(hd.toString());
                }
                List<Integer> hoaDonHuy = tksv.selectHDHuyTheoThang4();
                for (Integer hdHuy : hoaDonHuy) {
                    lblHangHuy.setText(hdHuy.toString());
                }
                List<Integer> khachHang = tksv.selectKHTheoThang4();
                for (Integer kh : khachHang) {
                    lblKhachHang.setText(kh.toString());
                }
            } else if (cbbTheoThang.getSelectedIndex() == 4) {
                List<Integer> doanhThu = tksv.selectDoanhThuTheoThang5();
                for (Integer dt : doanhThu) {
                    lblDoanhThu.setText(XMoney.themDauCham(dt));
                }
                List<Integer> hoaDon = tksv.selectHDTheoThang5();
                for (Integer hd : hoaDon) {
                    lblHoaDon.setText(hd.toString());
                }
                List<Integer> hoaDonHuy = tksv.selectHDHuyTheoThang5();
                for (Integer hdHuy : hoaDonHuy) {
                    lblHangHuy.setText(hdHuy.toString());
                }
                List<Integer> khachHang = tksv.selectKHTheoThang5();
                for (Integer kh : khachHang) {
                    lblKhachHang.setText(kh.toString());
                }
            } else if (cbbTheoThang.getSelectedIndex() == 5) {
                List<Integer> doanhThu = tksv.selectDoanhThuTheoThang6();
                for (Integer dt : doanhThu) {
                    lblDoanhThu.setText(XMoney.themDauCham(dt));
                }
                List<Integer> hoaDon = tksv.selectHDTheoThang6();
                for (Integer hd : hoaDon) {
                    lblHoaDon.setText(hd.toString());
                }
                List<Integer> hoaDonHuy = tksv.selectHDHuyTheoThang6();
                for (Integer hdHuy : hoaDonHuy) {
                    lblHangHuy.setText(hdHuy.toString());
                }
                List<Integer> khachHang = tksv.selectKHTheoThang6();
                for (Integer kh : khachHang) {
                    lblKhachHang.setText(kh.toString());
                }
            } else if (cbbTheoThang.getSelectedIndex() == 6) {
                List<Integer> doanhThu = tksv.selectDoanhThuTheoThang7();
                for (Integer dt : doanhThu) {
                    lblDoanhThu.setText(XMoney.themDauCham(dt));
                }
                List<Integer> hoaDon = tksv.selectHDTheoThang7();
                for (Integer hd : hoaDon) {
                    lblHoaDon.setText(hd.toString());
                }
                List<Integer> hoaDonHuy = tksv.selectHDHuyTheoThang7();
                for (Integer hdHuy : hoaDonHuy) {
                    lblHangHuy.setText(hdHuy.toString());
                }
                List<Integer> khachHang = tksv.selectKHTheoThang7();
                for (Integer kh : khachHang) {
                    lblKhachHang.setText(kh.toString());
                }
            } else if (cbbTheoThang.getSelectedIndex() == 7) {
                List<Integer> doanhThu = tksv.selectDoanhThuTheoThang8();
                for (Integer dt : doanhThu) {
                    lblDoanhThu.setText(XMoney.themDauCham(dt));
                }
                List<Integer> hoaDon = tksv.selectHDTheoThang8();
                for (Integer hd : hoaDon) {
                    lblHoaDon.setText(hd.toString());
                }
                List<Integer> hoaDonHuy = tksv.selectHDHuyTheoThang8();
                for (Integer hdHuy : hoaDonHuy) {
                    lblHangHuy.setText(hdHuy.toString());
                }
                List<Integer> khachHang = tksv.selectKHTheoThang8();
                for (Integer kh : khachHang) {
                    lblKhachHang.setText(kh.toString());
                }
            } else if (cbbTheoThang.getSelectedIndex() == 8) {
                List<Integer> doanhThu = tksv.selectDoanhThuTheoThang9();
                for (Integer dt : doanhThu) {
                    lblDoanhThu.setText(XMoney.themDauCham(dt));
                }
                List<Integer> hoaDon = tksv.selectHDTheoThang9();
                for (Integer hd : hoaDon) {
                    lblHoaDon.setText(hd.toString());
                }
                List<Integer> hoaDonHuy = tksv.selectHDHuyTheoThang9();
                for (Integer hdHuy : hoaDonHuy) {
                    lblHangHuy.setText(hdHuy.toString());
                }
                List<Integer> khachHang = tksv.selectKHTheoThang9();
                for (Integer kh : khachHang) {
                    lblKhachHang.setText(kh.toString());
                }
            } else if (cbbTheoThang.getSelectedIndex() == 9) {
                List<Integer> doanhThu = tksv.selectDoanhThuTheoThang10();
                for (Integer dt : doanhThu) {
                    lblDoanhThu.setText(XMoney.themDauCham(dt));
                }
                List<Integer> hoaDon = tksv.selectHDTheoThang10();
                for (Integer hd : hoaDon) {
                    lblHoaDon.setText(hd.toString());
                }
                List<Integer> hoaDonHuy = tksv.selectHDHuyTheoThang10();
                for (Integer hdHuy : hoaDonHuy) {
                    lblHangHuy.setText(hdHuy.toString());
                }
                List<Integer> khachHang = tksv.selectKHTheoThang10();
                for (Integer kh : khachHang) {
                    lblKhachHang.setText(kh.toString());
                }
            } else if (cbbTheoThang.getSelectedIndex() == 10) {
                List<Integer> doanhThu = tksv.selectDoanhThuTheoThang11();
                for (Integer dt : doanhThu) {
                    lblDoanhThu.setText(XMoney.themDauCham(dt));
                }
                List<Integer> hoaDon = tksv.selectHDTheoThang11();
                for (Integer hd : hoaDon) {
                    lblHoaDon.setText(hd.toString());
                }
                List<Integer> hoaDonHuy = tksv.selectHDHuyTheoThang11();
                for (Integer hdHuy : hoaDonHuy) {
                    lblHangHuy.setText(hdHuy.toString());
                }
                List<Integer> khachHang = tksv.selectKHTheoThang11();
                for (Integer kh : khachHang) {
                    lblKhachHang.setText(kh.toString());
                }
            } else if (cbbTheoThang.getSelectedIndex() == 11) {
                List<Integer> doanhThu = tksv.selectDoanhThuTheoThang12();
                for (Integer dt : doanhThu) {
                    lblDoanhThu.setText(XMoney.themDauCham(dt));
                }
                List<Integer> hoaDon = tksv.selectHDTheoThang12();
                for (Integer hd : hoaDon) {
                    lblHoaDon.setText(hd.toString());
                }
                List<Integer> hoaDonHuy = tksv.selectHDHuyTheoThang12();
                for (Integer hdHuy : hoaDonHuy) {
                    lblHangHuy.setText(hdHuy.toString());
                }
                List<Integer> khachHang = tksv.selectKHTheoThang12();
                for (Integer kh : khachHang) {
                    lblKhachHang.setText(kh.toString());
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void fillCbbTheoNam() {
        try {
            if (cbbTheoNam.getSelectedIndex() == 0) {
                List<Integer> doanhThu = tksv.selectDoanhThuTheoNam2019();
                for (Integer dt : doanhThu) {
                    lblDoanhThu.setText(XMoney.themDauCham(dt));
                }
                List<Integer> hoaDon = tksv.selectHDTheoNam2019();
                for (Integer hd : hoaDon) {
                    lblHoaDon.setText(hd.toString());
                }
                List<Integer> hoaDonHuy = tksv.selectHDHuyTheoNam2019();
                for (Integer hdHuy : hoaDonHuy) {
                    lblHangHuy.setText(hdHuy.toString());
                }
                List<Integer> khachHang = tksv.selectKHTheoNam2019();
                for (Integer kh : khachHang) {
                    lblKhachHang.setText(kh.toString());
                }
            } else if (cbbTheoNam.getSelectedIndex() == 1) {
                List<Integer> doanhThu = tksv.selectDoanhThuTheoNam2020();
                for (Integer dt : doanhThu) {
                    lblDoanhThu.setText(XMoney.themDauCham(dt));
                }
                List<Integer> hoaDon = tksv.selectHDTheoNam2020();
                for (Integer hd : hoaDon) {
                    lblHoaDon.setText(hd.toString());
                }
                List<Integer> hoaDonHuy = tksv.selectHDHuyTheoNam2020();
                for (Integer hdHuy : hoaDonHuy) {
                    lblHangHuy.setText(hdHuy.toString());
                }
                List<Integer> khachHang = tksv.selectKHTheoNam2020();
                for (Integer kh : khachHang) {
                    lblKhachHang.setText(kh.toString());
                }
            } else if (cbbTheoNam.getSelectedIndex() == 2) {
                List<Integer> doanhThu = tksv.selectDoanhThuTheoNam2021();
                for (Integer dt : doanhThu) {
                    lblDoanhThu.setText(XMoney.themDauCham(dt));
                }
                List<Integer> hoaDon = tksv.selectHDTheoNam2021();
                for (Integer hd : hoaDon) {
                    lblHoaDon.setText(hd.toString());
                }
                List<Integer> hoaDonHuy = tksv.selectHDHuyTheoNam2021();
                for (Integer hdHuy : hoaDonHuy) {
                    lblHangHuy.setText(hdHuy.toString());
                }
                List<Integer> khachHang = tksv.selectKHTheoNam2021();
                for (Integer kh : khachHang) {
                    lblKhachHang.setText(kh.toString());
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
