/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dienmaydo.gui;

import com.dienmaydo.entity.HinhThucGiaoHang;
import com.dienmaydo.entity.HinhThucThanhToan;
import com.dienmaydo.entity.HoaDon;
import com.dienmaydo.entity.HoaDonChiTiet;
import com.dienmaydo.entity.TrangThaiThanhToan;
import com.dienmaydo.service.HinhThucGiaoHangService;
import com.dienmaydo.service.HinhThucThanhToanService;
import com.dienmaydo.service.HoaDonChiTietService;
import com.dienmaydo.service.HoaDonService;
import com.dienmaydo.service.TrangThaiThanhToanService;
import com.dienmaydo.utils.XDate;
import com.dienmaydo.utils.XMoney;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DO TAT HOA 12-07-2021 9:52am
 */
public class F_HoaDon extends javax.swing.JInternalFrame {

    HoaDonChiTietService hdctService = new HoaDonChiTietService();
    HoaDonService hdService = new HoaDonService();
    HinhThucThanhToanService htttService = new HinhThucThanhToanService();
    HinhThucGiaoHangService htghService = new HinhThucGiaoHangService();
    TrangThaiThanhToanService ttttService = new TrangThaiThanhToanService();
    int row = -1;

    /**
     * Creates new form F_HoaDon
     */
    public F_HoaDon() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);

        fillCBOHinhThucGiaoHang();
        fillCBOHinhThucThanhToan();
        fillCBOTrangThaiThanhToan();
        fillTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblChiTietHoaDoon = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblHoaDon3 = new javax.swing.JTable();
        txtTimKiem3 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        cboThang = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        cboNam = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cboTongTien = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        cboHinhThucThanhToan = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cboHinhThucGiaoHang = new javax.swing.JComboBox<>();
        jPanel8 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cboTrangThaiThanhToan = new javax.swing.JComboBox<>();

        setPreferredSize(new java.awt.Dimension(1146, 768));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hóa đơn chi tiết", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        tblChiTietHoaDoon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hóa đơn chi tiết", "Mã sản phẩm", "Tên sản phẩm chi tiết", "Số lượng", "Đơn giá", "Thành tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblChiTietHoaDoon.setRowHeight(20);
        jScrollPane5.setViewportView(tblChiTietHoaDoon);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 1041, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hóa đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        tblHoaDon3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hóa đơn", "Tổng tiền", "Thanh Toán", "Tiền thừa trả khách", "Hình thức thanh toán", "Hình thức giao hàng", "Ngày lập hóa đơn", "Trạng thái thanh toán", "Mã NV", "Tên NV", "Mã KH", "Tên KH", "Ghi chú"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoaDon3.setRowHeight(20);
        tblHoaDon3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDon3MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblHoaDon3);

        txtTimKiem3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiem3KeyReleased(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setText("Tìm kiếm hóa đơn:");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Tháng:");

        cboThang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "  ", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", " " }));
        cboThang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboThangItemStateChanged(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Năm:");

        cboNam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "  ", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));
        cboNam.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboNamItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(cboThang, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(cboNam, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cboNam, cboThang});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboThang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboNam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Tổng tiền:");

        cboTongTien.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "    ", "0 VND - 500,000 VND", "500,000 VND - 1,000,000 VND", "1,000,000 VND - 5,000,000 VND", "5,000,000 VND - 10,000,000 VND", "10,000,000 VND - 20,000,000 VND", "20,000,000 VND - 50,000,000 VND", "50,000,000 VND - ... VND" }));
        cboTongTien.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTongTienItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(cboTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Hình thức thanh toán");

        cboHinhThucThanhToan.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboHinhThucThanhToanItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(cboHinhThucThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboHinhThucThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Hình thức giao hàng");

        cboHinhThucGiaoHang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboHinhThucGiaoHangItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(cboHinhThucGiaoHang, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboHinhThucGiaoHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Trạng thái thanh toán:");

        cboTrangThaiThanhToan.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTrangThaiThanhToanItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(cboTrangThaiThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboTrangThaiThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1041, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(txtTimKiem3, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiem3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblHoaDon3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDon3MouseClicked
        // TODO add your handling code here:
        clickHoaDon();
    }//GEN-LAST:event_tblHoaDon3MouseClicked

    private void txtTimKiem3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiem3KeyReleased
        // TODO add your handling code here:
        timKiem();
    }//GEN-LAST:event_txtTimKiem3KeyReleased

    private void cboNamItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboNamItemStateChanged
        // TODO add your handling code here:
        fillNgayLap();
    }//GEN-LAST:event_cboNamItemStateChanged

    private void cboThangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboThangItemStateChanged
        // TODO add your handling code here:
        fillNgayLap();
    }//GEN-LAST:event_cboThangItemStateChanged

    private void cboTongTienItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTongTienItemStateChanged
        // TODO add your handling code here:
        fillTongTien();
    }//GEN-LAST:event_cboTongTienItemStateChanged

    private void cboHinhThucThanhToanItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboHinhThucThanhToanItemStateChanged
        // TODO add your handling code here:
        fillHinhThuc();
    }//GEN-LAST:event_cboHinhThucThanhToanItemStateChanged

    private void cboHinhThucGiaoHangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboHinhThucGiaoHangItemStateChanged
        // TODO add your handling code here:
        fillHinhThucGiao();
    }//GEN-LAST:event_cboHinhThucGiaoHangItemStateChanged

    private void cboTrangThaiThanhToanItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTrangThaiThanhToanItemStateChanged
        // TODO add your handling code here:
        fillTrangThai();
    }//GEN-LAST:event_cboTrangThaiThanhToanItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboHinhThucGiaoHang;
    private javax.swing.JComboBox<String> cboHinhThucThanhToan;
    private javax.swing.JComboBox<String> cboNam;
    private javax.swing.JComboBox<String> cboThang;
    private javax.swing.JComboBox<String> cboTongTien;
    private javax.swing.JComboBox<String> cboTrangThaiThanhToan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable tblChiTietHoaDoon;
    private javax.swing.JTable tblHoaDon3;
    private javax.swing.JTextField txtTimKiem3;
    // End of variables declaration//GEN-END:variables

    public void fillCBOHinhThucThanhToan() {
        DefaultComboBoxModel<HinhThucThanhToan> model = (DefaultComboBoxModel) cboHinhThucThanhToan.getModel();
        model.addElement(null);
        List<HinhThucThanhToan> list = htttService.selectAll();
        for (HinhThucThanhToan x : list) {
            model.addElement(x);
        }
    }

    public void fillCBOHinhThucGiaoHang() {
        DefaultComboBoxModel<HinhThucGiaoHang> model = (DefaultComboBoxModel) cboHinhThucGiaoHang.getModel();
        model.addElement(null);
        List<HinhThucGiaoHang> list = htghService.selectAll();
        for (HinhThucGiaoHang x : list) {
            model.addElement(x);
        }
    }

    public void fillCBOTrangThaiThanhToan() {
        DefaultComboBoxModel<TrangThaiThanhToan> model = (DefaultComboBoxModel) cboTrangThaiThanhToan.getModel();
        model.addElement(null);
        List<TrangThaiThanhToan> list = ttttService.selectAll();
        for (TrangThaiThanhToan x : list) {
            model.addElement(x);
        }
    }

    public void timKiem() {
        DefaultTableModel model = (DefaultTableModel) tblHoaDon3.getModel();
        model.setRowCount(0);
        DefaultTableModel model2 = (DefaultTableModel) tblChiTietHoaDoon.getModel();
        model2.setRowCount(0);
        String key = txtTimKiem3.getText().trim();
        List<HoaDon> list = hdService.selectByTimKiem(key);
        for (HoaDon x : list) {
            model.addRow(new Object[]{
                x.getMaHD(), XMoney.themDauCham(x.getTongTien()) + " VNĐ", XMoney.themDauCham(x.getThanhToan()) + " VNĐ", XMoney.themDauCham(x.getTienThuaTraKhach()) + " VNĐ", x.getTenHTTT(), x.getTenHTGH(),
                XDate.toString(x.getNgayLap()), x.getTenTTTT(), x.getMaNV(), x.getTenNV(), x.getMaKH(), x.getTenKH(), x.getGhiChu()
            });
        }
        cboHinhThucThanhToan.setSelectedIndex(0);
        cboHinhThucGiaoHang.setSelectedIndex(0);
        cboTrangThaiThanhToan.setSelectedIndex(0);
        cboTongTien.setSelectedIndex(0);
        cboThang.setSelectedIndex(0);
        cboNam.setSelectedIndex(0);
    }

    public void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblHoaDon3.getModel();
        model.setRowCount(0);
        List<HoaDon> list = hdService.selectAll();
        for (HoaDon x : list) {
            model.addRow(new Object[]{
                x.getMaHD(), XMoney.themDauCham(x.getTongTien()) + " VNĐ", XMoney.themDauCham(x.getThanhToan()) + " VNĐ", XMoney.themDauCham(x.getTienThuaTraKhach()) + " VNĐ", x.getTenHTTT(), x.getTenHTGH(),
                XDate.toString(x.getNgayLap()), x.getTenTTTT(), x.getMaNV(), x.getTenNV(), x.getMaKH(), x.getTenKH(), x.getGhiChu()
            });
        }
    }

    public void clickHoaDon() {
        row = tblHoaDon3.getSelectedRow();
        String maHD = tblHoaDon3.getValueAt(row, 0) + "";
        DefaultTableModel model = (DefaultTableModel) tblChiTietHoaDoon.getModel();
        model.setRowCount(0);
        List<HoaDonChiTiet> list = hdctService.selectById(maHD);
        for (HoaDonChiTiet x : list) {
            model.addRow(new Object[]{
                x.getMaHDCT(), x.getMaSPCT(), x.getTenSP() + " " + x.getTenSPCT(), x.getSoLuong(), XMoney.themDauCham(x.getDonGia()) + " VNĐ", XMoney.themDauCham(x.getDonGia() * x.getSoLuong()) + " VNĐ"
            });
        }
    }

    public void fillHinhThuc() {
        DefaultTableModel model2 = (DefaultTableModel) tblChiTietHoaDoon.getModel();
        model2.setRowCount(0);
        if (cboHinhThucThanhToan.getSelectedItem() == null) {
            fillTable();
        }
        if (cboHinhThucThanhToan.getSelectedIndex() > 0) {
            DefaultTableModel model = (DefaultTableModel) tblHoaDon3.getModel();
            model.setRowCount(0);
            String key = cboHinhThucThanhToan.getSelectedItem().toString();
            List<HoaDon> list = hdService.selectByHinhThuc(key);
            for (HoaDon x : list) {
                model.addRow(new Object[]{
                    x.getMaHD(), XMoney.themDauCham(x.getTongTien()) + " VNĐ", XMoney.themDauCham(x.getThanhToan()) + " VNĐ", XMoney.themDauCham(x.getTienThuaTraKhach()) + " VNĐ", x.getTenHTTT(), x.getTenHTGH(),
                    XDate.toString(x.getNgayLap()), x.getTenTTTT(), x.getMaNV(), x.getTenNV(), x.getMaKH(), x.getTenKH(), x.getGhiChu()
                });
            }
            cboHinhThucGiaoHang.setSelectedIndex(0);
            cboTrangThaiThanhToan.setSelectedIndex(0);
            cboTongTien.setSelectedIndex(0);
            cboThang.setSelectedIndex(0);
            cboNam.setSelectedIndex(0);
            txtTimKiem3.setText("");
        }
    }

    public void fillHinhThucGiao() {
        DefaultTableModel model2 = (DefaultTableModel) tblChiTietHoaDoon.getModel();
        model2.setRowCount(0);
        if (cboHinhThucGiaoHang.getSelectedItem() == null) {
            fillTable();
        }
        if (cboHinhThucGiaoHang.getSelectedIndex() > 0) {
            DefaultTableModel model = (DefaultTableModel) tblHoaDon3.getModel();
            model.setRowCount(0);
            String key = cboHinhThucGiaoHang.getSelectedItem().toString();
            List<HoaDon> list = hdService.selectByHinhThucGiao(key);
            for (HoaDon x : list) {
                model.addRow(new Object[]{
                    x.getMaHD(), XMoney.themDauCham(x.getTongTien()) + " VNĐ", XMoney.themDauCham(x.getThanhToan()) + " VNĐ", XMoney.themDauCham(x.getTienThuaTraKhach()) + " VNĐ", x.getTenHTTT(), x.getTenHTGH(),
                    XDate.toString(x.getNgayLap()), x.getTenTTTT(), x.getMaNV(), x.getTenNV(), x.getMaKH(), x.getTenKH(), x.getGhiChu()
                });
            }
            cboHinhThucThanhToan.setSelectedIndex(0);
            cboTrangThaiThanhToan.setSelectedIndex(0);
            cboTongTien.setSelectedIndex(0);
            cboThang.setSelectedIndex(0);
            cboNam.setSelectedIndex(0);
            txtTimKiem3.setText("");
        }
    }

    public void fillTrangThai() {
        DefaultTableModel model2 = (DefaultTableModel) tblChiTietHoaDoon.getModel();
        model2.setRowCount(0);
        if (cboTrangThaiThanhToan.getSelectedItem() == null) {
            fillTable();
        }
        if (cboTrangThaiThanhToan.getSelectedIndex() > 0) {
            DefaultTableModel model = (DefaultTableModel) tblHoaDon3.getModel();
            model.setRowCount(0);
            String key = cboTrangThaiThanhToan.getSelectedItem().toString();
            List<HoaDon> list = hdService.selectByTrangThai(key);
            for (HoaDon x : list) {
                model.addRow(new Object[]{
                    x.getMaHD(), XMoney.themDauCham(x.getTongTien()) + " VNĐ", XMoney.themDauCham(x.getThanhToan()) + " VNĐ", XMoney.themDauCham(x.getTienThuaTraKhach()) + " VNĐ", x.getTenHTTT(), x.getTenHTGH(),
                    XDate.toString(x.getNgayLap()), x.getTenTTTT(), x.getMaNV(), x.getTenNV(), x.getMaKH(), x.getTenKH(), x.getGhiChu()
                });
            }
            cboHinhThucGiaoHang.setSelectedIndex(0);
            cboHinhThucThanhToan.setSelectedIndex(0);
            cboTongTien.setSelectedIndex(0);
            cboThang.setSelectedIndex(0);
            cboNam.setSelectedIndex(0);
            txtTimKiem3.setText("");
        }
    }

    public void fillNgayLap() {
        DefaultTableModel model2 = (DefaultTableModel) tblChiTietHoaDoon.getModel();
        model2.setRowCount(0);
        if (cboThang.getSelectedIndex() == 0 && cboNam.getSelectedIndex() == 0) {
            fillTable();
        }
        if (cboThang.getSelectedIndex() > 0 && cboNam.getSelectedIndex() > 0) {
            DefaultTableModel model = (DefaultTableModel) tblHoaDon3.getModel();
            model.setRowCount(0);
            List<HoaDon> list = hdService.selctByThangNam(cboThang.getSelectedItem().toString(), cboNam.getSelectedItem().toString());
            for (HoaDon x : list) {
                model.addRow(new Object[]{
                    x.getMaHD(), XMoney.themDauCham(x.getTongTien()) + " VNĐ", XMoney.themDauCham(x.getThanhToan()) + " VNĐ", XMoney.themDauCham(x.getTienThuaTraKhach()) + " VNĐ", x.getTenHTTT(), x.getTenHTGH(),
                    XDate.toString(x.getNgayLap()), x.getTenTTTT(), x.getMaNV(), x.getTenNV(), x.getMaKH(), x.getTenKH(), x.getGhiChu()
                });
            }
            cboHinhThucGiaoHang.setSelectedIndex(0);
            cboTrangThaiThanhToan.setSelectedIndex(0);
            cboTongTien.setSelectedIndex(0);
            cboHinhThucThanhToan.setSelectedIndex(0);
            txtTimKiem3.setText("");
        } else {
            if (cboThang.getSelectedIndex() > 0) {
                DefaultTableModel model = (DefaultTableModel) tblHoaDon3.getModel();
                model.setRowCount(0);
                List<HoaDon> list = hdService.selctByThang(cboThang.getSelectedItem().toString());
                for (HoaDon x : list) {
                    model.addRow(new Object[]{
                        x.getMaHD(), XMoney.themDauCham(x.getTongTien()) + " VNĐ", XMoney.themDauCham(x.getThanhToan()) + " VNĐ", XMoney.themDauCham(x.getTienThuaTraKhach()) + " VNĐ", x.getTenHTTT(), x.getTenHTGH(),
                        XDate.toString(x.getNgayLap()), x.getTenTTTT(), x.getMaNV(), x.getTenNV(), x.getMaKH(), x.getTenKH(), x.getGhiChu()
                    });
                }
                cboHinhThucGiaoHang.setSelectedIndex(0);
                cboTrangThaiThanhToan.setSelectedIndex(0);
                cboTongTien.setSelectedIndex(0);
                cboHinhThucThanhToan.setSelectedIndex(0);
                txtTimKiem3.setText("");
            }
            if (cboNam.getSelectedIndex() > 0) {
                DefaultTableModel model = (DefaultTableModel) tblHoaDon3.getModel();
                model.setRowCount(0);
                List<HoaDon> list = hdService.selctByNam(cboNam.getSelectedItem().toString());
                for (HoaDon x : list) {
                    model.addRow(new Object[]{
                        x.getMaHD(), XMoney.themDauCham(x.getTongTien()) + " VNĐ", XMoney.themDauCham(x.getThanhToan()) + " VNĐ", XMoney.themDauCham(x.getTienThuaTraKhach()) + " VNĐ", x.getTenHTTT(), x.getTenHTGH(),
                        XDate.toString(x.getNgayLap()), x.getTenTTTT(), x.getMaNV(), x.getTenNV(), x.getMaKH(), x.getTenKH(), x.getGhiChu()
                    });
                }
                cboHinhThucGiaoHang.setSelectedIndex(0);
                cboTrangThaiThanhToan.setSelectedIndex(0);
                cboTongTien.setSelectedIndex(0);
                cboHinhThucThanhToan.setSelectedIndex(0);
                txtTimKiem3.setText("");
            }
        }
    }

    public void fillTongTien() {
        DefaultTableModel model2 = (DefaultTableModel) tblChiTietHoaDoon.getModel();
        model2.setRowCount(0);
        if (cboTongTien.getSelectedIndex() == 0) {
            fillTable();
        }
        if (cboTongTien.getSelectedIndex() == 1) {
            DefaultTableModel model = (DefaultTableModel) tblHoaDon3.getModel();
            model.setRowCount(0);
            float key1;
            float key2;
            key1 = 0;
            key2 = 500000;
            List<HoaDon> list = hdService.selectByTongTien(key1, key2);
            for (HoaDon x : list) {
                model.addRow(new Object[]{
                    x.getMaHD(), XMoney.themDauCham(x.getTongTien()) + " VNĐ", XMoney.themDauCham(x.getThanhToan()) + " VNĐ", XMoney.themDauCham(x.getTienThuaTraKhach()) + " VNĐ", x.getTenHTTT(), x.getTenHTGH(),
                    XDate.toString(x.getNgayLap()), x.getTenTTTT(), x.getMaNV(), x.getTenNV(), x.getMaKH(), x.getTenKH(), x.getGhiChu()
                });
            }
            cboHinhThucGiaoHang.setSelectedIndex(0);
            cboHinhThucThanhToan.setSelectedIndex(0);
            cboTrangThaiThanhToan.setSelectedIndex(0);
            cboThang.setSelectedIndex(0);
            cboNam.setSelectedIndex(0);
            txtTimKiem3.setText("");
        }
        if (cboTongTien.getSelectedIndex() == 2) {
            DefaultTableModel model = (DefaultTableModel) tblHoaDon3.getModel();
            model.setRowCount(0);
            float key1;
            float key2;
            key1 = 500000;
            key2 = 1000000;
            List<HoaDon> list = hdService.selectByTongTien(key1, key2);
            for (HoaDon x : list) {
                model.addRow(new Object[]{
                    x.getMaHD(), XMoney.themDauCham(x.getTongTien()) + " VNĐ", XMoney.themDauCham(x.getThanhToan()) + " VNĐ", XMoney.themDauCham(x.getTienThuaTraKhach()) + " VNĐ", x.getTenHTTT(), x.getTenHTGH(),
                    XDate.toString(x.getNgayLap()), x.getTenTTTT(), x.getMaNV(), x.getTenNV(), x.getMaKH(), x.getTenKH(), x.getGhiChu()
                });
            }
            cboHinhThucGiaoHang.setSelectedIndex(0);
            cboHinhThucThanhToan.setSelectedIndex(0);
            cboTrangThaiThanhToan.setSelectedIndex(0);
            cboThang.setSelectedIndex(0);
            cboNam.setSelectedIndex(0);
            txtTimKiem3.setText("");
        }
        if (cboTongTien.getSelectedIndex() == 3) {
            DefaultTableModel model = (DefaultTableModel) tblHoaDon3.getModel();
            model.setRowCount(0);
            float key1;
            float key2;
            key1 = 1000000;
            key2 = 5000000;
            List<HoaDon> list = hdService.selectByTongTien(key1, key2);
            for (HoaDon x : list) {
                model.addRow(new Object[]{
                    x.getMaHD(), XMoney.themDauCham(x.getTongTien()) + " VNĐ", XMoney.themDauCham(x.getThanhToan()) + " VNĐ", XMoney.themDauCham(x.getTienThuaTraKhach()) + " VNĐ", x.getTenHTTT(), x.getTenHTGH(),
                    XDate.toString(x.getNgayLap()), x.getTenTTTT(), x.getMaNV(), x.getTenNV(), x.getMaKH(), x.getTenKH(), x.getGhiChu()
                });
            }
            cboHinhThucGiaoHang.setSelectedIndex(0);
            cboHinhThucThanhToan.setSelectedIndex(0);
            cboTrangThaiThanhToan.setSelectedIndex(0);
            cboThang.setSelectedIndex(0);
            cboNam.setSelectedIndex(0);
            txtTimKiem3.setText("");
        }
        if (cboTongTien.getSelectedIndex() == 4) {
            DefaultTableModel model = (DefaultTableModel) tblHoaDon3.getModel();
            model.setRowCount(0);
            float key1;
            float key2;
            key1 = 5000000;
            key2 = 10000000;
            List<HoaDon> list = hdService.selectByTongTien(key1, key2);
            for (HoaDon x : list) {
                model.addRow(new Object[]{
                    x.getMaHD(), XMoney.themDauCham(x.getTongTien()) + " VNĐ", XMoney.themDauCham(x.getThanhToan()) + " VNĐ", XMoney.themDauCham(x.getTienThuaTraKhach()) + " VNĐ", x.getTenHTTT(), x.getTenHTGH(),
                    XDate.toString(x.getNgayLap()), x.getTenTTTT(), x.getMaNV(), x.getTenNV(), x.getMaKH(), x.getTenKH(), x.getGhiChu()
                });
            }
            cboHinhThucGiaoHang.setSelectedIndex(0);
            cboHinhThucThanhToan.setSelectedIndex(0);
            cboTrangThaiThanhToan.setSelectedIndex(0);
            cboThang.setSelectedIndex(0);
            cboNam.setSelectedIndex(0);
            txtTimKiem3.setText("");
        }
        if (cboTongTien.getSelectedIndex() == 5) {
            DefaultTableModel model = (DefaultTableModel) tblHoaDon3.getModel();
            model.setRowCount(0);
            float key1;
            float key2;
            key1 = 10000000;
            key2 = 20000000;
            List<HoaDon> list = hdService.selectByTongTien(key1, key2);
            for (HoaDon x : list) {
                model.addRow(new Object[]{
                    x.getMaHD(), XMoney.themDauCham(x.getTongTien()) + " VNĐ", XMoney.themDauCham(x.getThanhToan()) + " VNĐ", XMoney.themDauCham(x.getTienThuaTraKhach()) + " VNĐ", x.getTenHTTT(), x.getTenHTGH(),
                    XDate.toString(x.getNgayLap()), x.getTenTTTT(), x.getMaNV(), x.getTenNV(), x.getMaKH(), x.getTenKH(), x.getGhiChu()
                });
            }
            cboHinhThucGiaoHang.setSelectedIndex(0);
            cboHinhThucThanhToan.setSelectedIndex(0);
            cboTrangThaiThanhToan.setSelectedIndex(0);
            cboThang.setSelectedIndex(0);
            cboNam.setSelectedIndex(0);
            txtTimKiem3.setText("");
        }
        if (cboTongTien.getSelectedIndex() == 6) {
            DefaultTableModel model = (DefaultTableModel) tblHoaDon3.getModel();
            model.setRowCount(0);
            float key1;
            float key2;
            key1 = 20000000;
            key2 = 50000000;
            List<HoaDon> list = hdService.selectByTongTien(key1, key2);
            for (HoaDon x : list) {
                model.addRow(new Object[]{
                    x.getMaHD(), XMoney.themDauCham(x.getTongTien()) + " VNĐ", XMoney.themDauCham(x.getThanhToan()) + " VNĐ", XMoney.themDauCham(x.getTienThuaTraKhach()) + " VNĐ", x.getTenHTTT(), x.getTenHTGH(),
                    XDate.toString(x.getNgayLap()), x.getTenTTTT(), x.getMaNV(), x.getTenNV(), x.getMaKH(), x.getTenKH(), x.getGhiChu()
                });
            }
            cboHinhThucGiaoHang.setSelectedIndex(0);
            cboHinhThucThanhToan.setSelectedIndex(0);
            cboTrangThaiThanhToan.setSelectedIndex(0);
            cboThang.setSelectedIndex(0);
            cboNam.setSelectedIndex(0);
            txtTimKiem3.setText("");
        }
        if (cboTongTien.getSelectedIndex() == 7) {
            DefaultTableModel model = (DefaultTableModel) tblHoaDon3.getModel();
            model.setRowCount(0);
            float key = 50000000;
            List<HoaDon> list = hdService.selctByTongTienMax(key);
            for (HoaDon x : list) {
                model.addRow(new Object[]{
                    x.getMaHD(), XMoney.themDauCham(x.getTongTien()) + " VNĐ", XMoney.themDauCham(x.getThanhToan()) + " VNĐ", XMoney.themDauCham(x.getTienThuaTraKhach()) + " VNĐ", x.getTenHTTT(), x.getTenHTGH(),
                    XDate.toString(x.getNgayLap()), x.getTenTTTT(), x.getMaNV(), x.getTenNV(), x.getMaKH(), x.getTenKH(), x.getGhiChu()
                });
            }
            cboHinhThucGiaoHang.setSelectedIndex(0);
            cboHinhThucThanhToan.setSelectedIndex(0);
            cboTrangThaiThanhToan.setSelectedIndex(0);
            cboThang.setSelectedIndex(0);
            cboNam.setSelectedIndex(0);
            txtTimKiem3.setText("");
        }

    }

}
