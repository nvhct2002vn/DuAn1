/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dienmaydo.gui;

import com.dienmaydo.entity.DanhMuc;
import com.dienmaydo.entity.HinhThucGiaoHang;
import com.dienmaydo.entity.HinhThucThanhToan;
import com.dienmaydo.entity.HoaDon;
import com.dienmaydo.entity.HoaDonChiTiet;
import com.dienmaydo.entity.KhuyenMai;
import com.dienmaydo.entity.SanPhamChiTiet;
import com.dienmaydo.service.DanhMucService;
import com.dienmaydo.service.HinhThucGiaoHangService;
import com.dienmaydo.service.HinhThucThanhToanService;
import com.dienmaydo.service.HoaDonChiTietService;
import com.dienmaydo.service.HoaDonService;
import com.dienmaydo.service.KhuyenMaiService;
import com.dienmaydo.service.SanPhamChiTietService;
import com.dienmaydo.utils.Auth;
import com.dienmaydo.utils.Msgbox;
import com.dienmaydo.utils.XDate;
import com.dienmaydo.utils.XMoney;
import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.LuminanceSource;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.NotFoundException;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileOutputStream;
import java.util.List;
import java.util.Random;
import java.util.Vector;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import java.util.concurrent.ThreadFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xwpf.usermodel.ParagraphAlignment;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;
import org.apache.poi.xwpf.usermodel.XWPFTable;
import org.apache.poi.xwpf.usermodel.XWPFTableRow;

/**
 *
 * @author DO TAT HOA 12-09-2021 10:19pm
 */
public class F_BanHang extends javax.swing.JInternalFrame implements Runnable, ThreadFactory {

    DefaultTableModel model1;
    DefaultTableModel model2;
    DefaultTableModel model3;
    SanPhamChiTietService spService = new SanPhamChiTietService();
    HoaDonService hdService = new HoaDonService();
    DanhMucService dmService = new DanhMucService();
    KhuyenMaiService kmService = new KhuyenMaiService();
    HinhThucThanhToanService htttService = new HinhThucThanhToanService();
    HinhThucGiaoHangService htghService = new HinhThucGiaoHangService();
    HoaDonChiTietService hdctService = new HoaDonChiTietService();
    int row1 = -1;
    int row2 = -1;
    int row3 = -1;

    private WebcamPanel panel = null;
    public static Webcam webcam = null;

    private static final long serialVersionUID = 6441489157408381878L;
    private Executor executor = Executors.newSingleThreadExecutor(this);

    public static final String FONT = "resources/fonts/FreeSans.ttf";

    /**
     * Creates new form F_BanHang
     */
    public F_BanHang() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        setResizable(false);

        model1 = (DefaultTableModel) tblChonSanPham.getModel();
        model2 = (DefaultTableModel) tblSanPhamChon.getModel();
        model3 = (DefaultTableModel) tblHoaDonCho.getModel();
        fillCBOHinhThucGiaoHang();
        fillCBOHinhThucThanhToan();
        fillCboDanhMuc();
        showHoaDonCho();
        initWebcam();

        btnChon.setEnabled(false);
        btnThayDoi.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSanPhamChon = new javax.swing.JTable();
        btnXoaSP = new javax.swing.JButton();
        btnXoaTatCa = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblChonSanPham = new javax.swing.JTable();
        txtTimKiem = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        btnThemSanPham = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        cboDanhMuc = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        btnTao = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtghiChu = new javax.swing.JTextArea();
        lblGiamGia = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cboHinhThucTT = new javax.swing.JComboBox<>();
        btnHuyHoaDon = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        lblTongTien = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnThanhToan = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cboHinhThucGiaoHang = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        lblMaKH = new javax.swing.JLabel();
        btnThayDoi = new javax.swing.JButton();
        btnChon = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblTenKH = new javax.swing.JLabel();
        txtTienKhachDua = new javax.swing.JTextField();
        lblMaHoaDon = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        lblTienThuaTraKhach = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        lblThanhToan = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblHoaDonCho = new javax.swing.JTable();
        webCamPanel = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();

        setPreferredSize(new java.awt.Dimension(1146, 768));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1146, 768));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Giỏ hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        tblSanPhamChon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Đơn giá", "Số lượng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPhamChon.setRowHeight(25);
        jScrollPane1.setViewportView(tblSanPhamChon);

        btnXoaSP.setBackground(new java.awt.Color(255, 204, 0));
        btnXoaSP.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnXoaSP.setForeground(new java.awt.Color(51, 51, 51));
        btnXoaSP.setIcon(new javax.swing.ImageIcon("D:\\FPT\\PRO1041\\SQL\\DuAn1\\Dien_May_Do\\src\\com\\dienmaydo\\icon\\delete_26px.png")); // NOI18N
        btnXoaSP.setText("Xóa sản phẩm");
        btnXoaSP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 0)));
        btnXoaSP.setPreferredSize(new java.awt.Dimension(60, 30));
        btnXoaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaSPActionPerformed(evt);
            }
        });

        btnXoaTatCa.setBackground(new java.awt.Color(255, 204, 0));
        btnXoaTatCa.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnXoaTatCa.setForeground(new java.awt.Color(51, 51, 51));
        btnXoaTatCa.setIcon(new javax.swing.ImageIcon("D:\\FPT\\PRO1041\\SQL\\DuAn1\\Dien_May_Do\\src\\com\\dienmaydo\\icon\\delete_26px.png")); // NOI18N
        btnXoaTatCa.setText("Xóa tất cả");
        btnXoaTatCa.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 0)));
        btnXoaTatCa.setPreferredSize(new java.awt.Dimension(60, 30));
        btnXoaTatCa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaTatCaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnXoaSP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoaTatCa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(btnXoaSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(btnXoaTatCa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        tblChonSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Đơn giá", "Giảm giá", "Màu sắc", "Chất liệu", "Kích thước", "Thể tích", "Số lượng tồn"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblChonSanPham.setRowHeight(25);
        jScrollPane2.setViewportView(tblChonSanPham);

        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Tìm kiếm sản phẩm:");

        btnThemSanPham.setBackground(new java.awt.Color(255, 204, 0));
        btnThemSanPham.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnThemSanPham.setForeground(new java.awt.Color(51, 51, 51));
        btnThemSanPham.setIcon(new javax.swing.ImageIcon("D:\\FPT\\PRO1041\\SQL\\DuAn1\\Dien_May_Do\\src\\com\\dienmaydo\\icon\\add_24px.png")); // NOI18N
        btnThemSanPham.setText("Thêm sản phẩm");
        btnThemSanPham.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 0)));
        btnThemSanPham.setPreferredSize(new java.awt.Dimension(60, 30));
        btnThemSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSanPhamActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Danh mục:");

        cboDanhMuc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboDanhMucItemStateChanged(evt);
            }
        });
        cboDanhMuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboDanhMucActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnThemSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(161, 161, 161))
                    .addComponent(cboDanhMuc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboDanhMuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnThemSanPham, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Đơn hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        btnTao.setBackground(new java.awt.Color(255, 204, 0));
        btnTao.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btnTao.setIcon(new javax.swing.ImageIcon("D:\\FPT\\PRO1041\\SQL\\DuAn1\\Dien_May_Do\\src\\com\\dienmaydo\\icon\\save_16px.png")); // NOI18N
        btnTao.setText("Tạo");
        btnTao.setPreferredSize(new java.awt.Dimension(101, 25));
        btnTao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Giảm giá:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Tổng tiền:");

        txtghiChu.setColumns(20);
        txtghiChu.setRows(5);
        jScrollPane3.setViewportView(txtghiChu);

        lblGiamGia.setText("0");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Mã hóa đơn:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Hình thức thanh toán:");

        btnHuyHoaDon.setBackground(new java.awt.Color(255, 204, 0));
        btnHuyHoaDon.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btnHuyHoaDon.setIcon(new javax.swing.ImageIcon("D:\\FPT\\PRO1041\\SQL\\DuAn1\\Dien_May_Do\\src\\com\\dienmaydo\\icon\\update_16px.png")); // NOI18N
        btnHuyHoaDon.setText("Hủy hóa đơn");
        btnHuyHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyHoaDonActionPerformed(evt);
            }
        });

        btnLamMoi.setBackground(new java.awt.Color(255, 204, 0));
        btnLamMoi.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btnLamMoi.setIcon(new javax.swing.ImageIcon("D:\\FPT\\PRO1041\\SQL\\DuAn1\\Dien_May_Do\\src\\com\\dienmaydo\\icon\\refresh_16px.png")); // NOI18N
        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Tiền thừa trả khách:");

        lblTongTien.setText("0");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Ghi chú:");

        btnThanhToan.setBackground(new java.awt.Color(255, 204, 0));
        btnThanhToan.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnThanhToan.setForeground(new java.awt.Color(51, 51, 51));
        btnThanhToan.setIcon(new javax.swing.ImageIcon("D:\\FPT\\PRO1041\\SQL\\DuAn1\\Dien_May_Do\\src\\com\\dienmaydo\\icon\\create_26px.png")); // NOI18N
        btnThanhToan.setText("Thanh toán");
        btnThanhToan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 0)));
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Tiền khách đưa:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setText("Hình thức giao hàng:");

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        lblMaKH.setForeground(new java.awt.Color(255, 0, 0));
        lblMaKH.setText("KH00");

        btnThayDoi.setBackground(new java.awt.Color(255, 204, 0));
        btnThayDoi.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnThayDoi.setIcon(new javax.swing.ImageIcon("D:\\FPT\\PRO1041\\SQL\\DuAn1\\Dien_May_Do\\src\\com\\dienmaydo\\icon\\save_16px.png")); // NOI18N
        btnThayDoi.setText("Thay đổi");
        btnThayDoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThayDoiActionPerformed(evt);
            }
        });

        btnChon.setBackground(new java.awt.Color(255, 204, 0));
        btnChon.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btnChon.setIcon(new javax.swing.ImageIcon("D:\\FPT\\PRO1041\\SQL\\DuAn1\\Dien_May_Do\\src\\com\\dienmaydo\\icon\\show_password_16px.png")); // NOI18N
        btnChon.setText("Chọn");
        btnChon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Mã khách hàng:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Tên khách hàng:");

        lblTenKH.setForeground(new java.awt.Color(255, 0, 0));
        lblTenKH.setText("Khách bán lẻ");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTenKH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnThayDoi)
                    .addComponent(btnChon, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnChon, btnThayDoi});

        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(btnChon)
                    .addComponent(lblMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThayDoi)
                    .addComponent(jLabel7)
                    .addComponent(lblTenKH))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtTienKhachDua.setText("0");
        txtTienKhachDua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTienKhachDuaKeyReleased(evt);
            }
        });

        lblMaHoaDon.setText("Vui lòng tạo!");

        jLabel13.setText("VNĐ");

        jLabel14.setText("VNĐ");

        jLabel15.setText("VNĐ");

        jLabel16.setText("VNĐ");

        lblTienThuaTraKhach.setText("0");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setText("Thanh toán:");

        lblThanhToan.setText("0");

        jLabel17.setText("VNĐ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThanhToan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(btnHuyHoaDon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(15, 15, 15)
                                .addComponent(cboHinhThucGiaoHang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(21, 21, 21)
                                .addComponent(lblTienThuaTraKhach, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel16))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(64, 64, 64)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(lblMaHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnTao, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(lblGiamGia, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                            .addComponent(lblTongTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(2, 2, 2)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel14)
                                            .addComponent(jLabel13)))))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cboHinhThucTT, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel20))
                                .addGap(45, 45, 45)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblThanhToan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtTienKhachDua, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel17))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnTao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMaHoaDon))
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblTongTien)
                    .addComponent(jLabel13))
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblGiamGia)
                    .addComponent(jLabel14))
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(lblThanhToan)
                    .addComponent(jLabel17))
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTienKhachDua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel16)
                    .addComponent(lblTienThuaTraKhach))
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboHinhThucTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cboHinhThucGiaoHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLamMoi)
                    .addComponent(btnHuyHoaDon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hóa đơn chờ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        tblHoaDonCho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hóa đơn", "Ngày tạo", "Nhân viên tạo", "Khách hàng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoaDonCho.setRowHeight(25);
        tblHoaDonCho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonChoMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblHoaDonCho);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );

        webCamPanel.setBackground(new java.awt.Color(255, 255, 255));
        webCamPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Quét mã sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        webCamPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel8.setBackground(new java.awt.Color(51, 51, 51));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        webCamPanel.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 250, 150));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(webCamPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(webCamPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1154, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 739, Short.MAX_VALUE)
        );

        jPanel1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSanPhamActionPerformed
        // TODO add your handling code here:
        themSanPham();
    }//GEN-LAST:event_btnThemSanPhamActionPerformed

    private void btnXoaTatCaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaTatCaActionPerformed
        // TODO add your handling code here:
        xoaTatCa();
    }//GEN-LAST:event_btnXoaTatCaActionPerformed

    private void btnXoaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaSPActionPerformed
        // TODO add your handling code here:
        xoaSanPham();
    }//GEN-LAST:event_btnXoaSPActionPerformed

    private void cboDanhMucItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboDanhMucItemStateChanged
        // TODO add your handling code here:
        showProductsDM();
    }//GEN-LAST:event_cboDanhMucItemStateChanged

    private void cboDanhMucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboDanhMucActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboDanhMucActionPerformed

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        // TODO add your handling code here:
        timKiem();
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void tblHoaDonChoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonChoMouseClicked
        // TODO add your handling code here:
        clickHoaDonCho();
    }//GEN-LAST:event_tblHoaDonChoMouseClicked

    private void btnTaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoActionPerformed
        // TODO add your handling code here:
        luuHoaDon();
    }//GEN-LAST:event_btnTaoActionPerformed

    private void btnHuyHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyHoaDonActionPerformed
        // TODO add your handling code here:
        huyHoaDon();
    }//GEN-LAST:event_btnHuyHoaDonActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        // TODO add your handling code here:
        lamMoi();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        // TODO add your handling code here:
        thanhToan();
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void btnChonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonActionPerformed
        // TODO add your handling code here:
        if (txtTienKhachDua.getText().trim().equals("")) {
            txtTienKhachDua.setText("0");
        }
        KhachHangJframe kh = new KhachHangJframe();
        kh.setVisible(true);
    }//GEN-LAST:event_btnChonActionPerformed

    private void btnThayDoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThayDoiActionPerformed
        // TODO add your handling code here:
        showTTKH();
    }//GEN-LAST:event_btnThayDoiActionPerformed

    private void txtTienKhachDuaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTienKhachDuaKeyReleased
        // TODO add your handling code here:
        capNhatTienThuaTraKhach();
    }//GEN-LAST:event_txtTienKhachDuaKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChon;
    private javax.swing.JButton btnHuyHoaDon;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnTao;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnThayDoi;
    private javax.swing.JButton btnThemSanPham;
    private javax.swing.JButton btnXoaSP;
    private javax.swing.JButton btnXoaTatCa;
    private javax.swing.JComboBox<String> cboDanhMuc;
    private javax.swing.JComboBox<String> cboHinhThucGiaoHang;
    private javax.swing.JComboBox<String> cboHinhThucTT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblGiamGia;
    private javax.swing.JLabel lblMaHoaDon;
    private javax.swing.JLabel lblMaKH;
    private javax.swing.JLabel lblTenKH;
    private javax.swing.JLabel lblThanhToan;
    private javax.swing.JLabel lblTienThuaTraKhach;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JTable tblChonSanPham;
    private javax.swing.JTable tblHoaDonCho;
    private javax.swing.JTable tblSanPhamChon;
    private javax.swing.JTextField txtTienKhachDua;
    private javax.swing.JTextField txtTimKiem;
    private javax.swing.JTextArea txtghiChu;
    private javax.swing.JPanel webCamPanel;
    // End of variables declaration//GEN-END:variables

    public void themSanPham() {
        if (txtTienKhachDua.getText().trim().equals("")) {
            txtTienKhachDua.setText("0");
        }
        row1 = tblChonSanPham.getSelectedRow();
        row3 = tblHoaDonCho.getSelectedRow();
        try {
            if (row3 < 0) {
                Msgbox.alert(this, "Vui lòng chọn hóa đơn chờ\nNếu chưa có vui lòng tạo!");
            } else if (row1 < 0) {
                Msgbox.alert(this, "Vui lòng chọn sản phẩm trên table!");
            } else {
                String soluong = Msgbox.prompt(this, "Mời bạn nhập số lượng sản phẩm:");
                if (soluong != null) {
                    if (Integer.parseInt(soluong) > Integer.parseInt(tblChonSanPham.getValueAt(row1, 8) + "")) {
                        Msgbox.alert(this, "Số lượng sản phẩm bạn vừa nhập vượt quá số lượng trong kho!");
                        return;
                    } else if (Integer.parseInt(soluong) < 0) {
                        Msgbox.alert(this, "Số lượng sản phẩm không được nhỏ hơn 0!");
                        return;
                    } else {
                        for (int i = 0; i < tblSanPhamChon.getRowCount(); i++) {
                            if (tblSanPhamChon.getValueAt(i, 0).toString().equals(tblChonSanPham.getValueAt(row1, 0))) {
                                int soLuongGoc = Integer.parseInt(tblSanPhamChon.getValueAt(i, 3) + "");
                                tblSanPhamChon.setValueAt(soLuongGoc + Integer.parseInt(soluong), i, 3);
                                donHang();
                                capNhatHoaDon();
                                //Cập nhật số lượng sản phẩm tồn (begin)
                                SanPhamChiTiet s = spService.selectByID(tblChonSanPham.getValueAt(row1, 0) + "");
                                int soLuongMoi = (s.getSoLuong() - Integer.parseInt(soluong));

                                SanPhamChiTiet sp = new SanPhamChiTiet();
                                sp.setSoLuong(soLuongMoi);
                                sp.setMaSPCT(tblChonSanPham.getValueAt(row1, 0) + "");
                                spService.updateBanHang(sp);
                                // cập nhật số lượng sản phầm tồn (end)
                                fillTable();
                                return;
                            }
                        }
                        Vector v = new Vector();
                        v.add(tblChonSanPham.getValueAt(row1, 0));
                        v.add(tblChonSanPham.getValueAt(row1, 1));
                        v.add(tblChonSanPham.getValueAt(row1, 2));
                        v.add(soluong);
                        model2.addRow(v);
                        donHang();
                        capNhatHoaDon();
                        //Cập nhật số lượng sản phẩm tồn (begin)
                        SanPhamChiTiet s = spService.selectByID(tblChonSanPham.getValueAt(row1, 0) + "");
                        int soLuongMoi = (s.getSoLuong() - Integer.parseInt(soluong));

                        SanPhamChiTiet sp = new SanPhamChiTiet();
                        sp.setSoLuong(soLuongMoi);
                        sp.setMaSPCT(tblChonSanPham.getValueAt(row1, 0) + "");
                        spService.updateBanHang(sp);
                        // cập nhật số lượng sản phầm tồn (end)
                        fillTable();
                    }
                }
            }
        } catch (NumberFormatException e) {
            Msgbox.alert(this, "Số lượng sản phẩm phải là số nguyên");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void capNhatHoaDon() {
        HoaDon hd = getForm();
        hdService.update(hd);
        hdctService.delete(lblMaHoaDon.getText());
        for (int i = 0; i < tblSanPhamChon.getRowCount(); i++) {
            HoaDonChiTiet hdct = new HoaDonChiTiet();
            hdct.setMaSPCT(tblSanPhamChon.getValueAt(i, 0) + "");
            hdct.setMaHD(lblMaHoaDon.getText());
            hdct.setSoLuong(Integer.parseInt(tblSanPhamChon.getValueAt(i, 3) + ""));
            hdct.setDonGia(XMoney.loaiBoVND(tblSanPhamChon.getValueAt(i, 2) + ""));
            hdctService.insert(hdct);
        }
    }

    public void huyHoaDon() {
        if (txtTienKhachDua.getText().trim().equals("")) {
            txtTienKhachDua.setText("0");
        }
        HinhThucGiaoHang htgh = (HinhThucGiaoHang) cboHinhThucGiaoHang.getSelectedItem();
        HinhThucThanhToan httt = (HinhThucThanhToan) cboHinhThucTT.getSelectedItem();

        HoaDon hd = new HoaDon();
        hd.setMaHD(lblMaHoaDon.getText());
        hd.setMaKH(lblMaKH.getText());
        hd.setMaHTTT(httt.getMaHTTT());
        hd.setMaTTTT("TT003");
        hd.setMaHTGH(htgh.getMaHTGH());
        hd.setTienThuaTraKhach(0);
        hd.setTongTien(XMoney.loaiBoDauCham(lblTongTien.getText()));
        hd.setThanhToan(XMoney.loaiBoDauCham(lblThanhToan.getText()));
        hd.setGhiChu(txtghiChu.getText());
        try {
            if (lblMaHoaDon.getText().equals("Vui lòng tạo!")) {
                Msgbox.alert(this, "Vui lòng chọn hóa đơn để hủy");
            } else {
                if (Msgbox.confirm(this, "Bạn chắc chắn muốn hủy hóa đơn này ?")) {
                    hdService.update(hd);
                    capNhatSoluongXoaAll();
                    donHang();
                    showHoaDonCho();
                    showProductsDM();
                    lamMoi();
                    Msgbox.alert(this, "Hóa đơn đã được hủy!");
                }
            }
        } catch (Exception e) {
            Msgbox.alert(this, "Hủy hóa đơn thất bại");
            e.printStackTrace();
        }
    }

    public void xoaSanPham() {
        if (txtTienKhachDua.getText().trim().equals("")) {
            txtTienKhachDua.setText("0");
        }
        row2 = tblSanPhamChon.getSelectedRow();
        try {
            if (tblSanPhamChon.getRowCount() == 0) {
                Msgbox.alert(this, "Không có sản phẩm để xóa");
            } else {
                if (row2 < 0) {
                    Msgbox.alert(this, "Vui lòng chọn sản phẩm để xóa!");
                    return;
                } else {
                    if (Msgbox.confirm(this, "Bạn chắc chắn muốn xóa sản phẩm này khỏi giỏ hàng?")) {
                        capNhatSoLuongXoaSP();
                        model2.removeRow(row2);
                        donHang();
                        capNhatHoaDon();
                        fillTable();
                        Msgbox.alert(this, "Xóa sản phẩm thành công");
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            Msgbox.alert(this, "Xóa sản phẩm thất bại");
        }
    }

    public void xoaTatCa() {
        if (txtTienKhachDua.getText().trim().equals("")) {
            txtTienKhachDua.setText("0");
        }
        try {
            if (tblSanPhamChon.getRowCount() == 0) {
                Msgbox.alert(this, "Không có sản phẩm để xóa");
            } else {
                if (Msgbox.confirm(this, "Bạn chắc chắn muốn xóa hết tất cả sản phẩm này khỏi giỏ hàng?")) {
                    capNhatSoluongXoaAll();
                    model2.setRowCount(0);
                    donHang();
                    capNhatHoaDon();
                    fillTable();
                    Msgbox.alert(this, "Xóa tất cả sản phẩm thành công");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            Msgbox.alert(this, "Xóa tất cả sản phẩm thất bại");
        }
    }

    public void timKiem() {
        if (txtTimKiem.getText().trim().equals("")) {
            fillTable();
            cboDanhMuc.setSelectedIndex(0);
        } else {
            model1.setRowCount(0);
            List<SanPhamChiTiet> list = spService.selectByTimKiem(txtTimKiem.getText().trim());
            for (SanPhamChiTiet x : list) {
                model1.addRow(new Object[]{
                    x.getMaSPCT(), x.getTenSP() + " " + x.getTenSPCT(), XMoney.themDauCham(x.getGiaBan()) + " VNĐ", "", x.getTenMauSac(), x.getTenChatLieu(), x.getChieuDai() + "cm X " + x.getChieuRong() + "cm X " + x.getChieuCao() + "cm",
                    x.getTheTich() + " Lít", x.getSoLuong()
                });
            }
            for (int i = 0; i < tblChonSanPham.getRowCount(); i++) {
                KhuyenMai km = kmService.selectGiamGia(tblChonSanPham.getValueAt(i, 0).toString());
                if (km == null) {
                    tblChonSanPham.setValueAt("0", i, 3);
                } else {
                    if (km.getHinhThuc().equalsIgnoreCase("Giảm theo %")) {
                        tblChonSanPham.setValueAt(km.getGiamGia() + "%", i, 3);
                    } else {
                        tblChonSanPham.setValueAt(XMoney.themDauCham(km.getGiamGia()) + " VNĐ", i, 3);
                    }
                }
            }
            cboDanhMuc.setSelectedIndex(0);
        }
    }

    public void capNhatTienThuaTraKhach() {
        txtTienKhachDua.setBackground(Color.white);
        if (txtTienKhachDua.getText().trim().equals("")) {
            lblTienThuaTraKhach.setText("0");
            return;
        } else {
            try {
                long tienKhachDuaFormated = XMoney.loaiBoDauCham(txtTienKhachDua.getText().trim());
                txtTienKhachDua.setText(XMoney.themDauCham(tienKhachDuaFormated));

                long thanhToan = XMoney.loaiBoDauCham(lblThanhToan.getText());
                long tienKhachDua = XMoney.loaiBoDauCham(txtTienKhachDua.getText().trim());
                long tienThuTraKhach = tienKhachDua - thanhToan;
                lblTienThuaTraKhach.setText(XMoney.themDauCham(tienThuTraKhach));
            } catch (NumberFormatException e) {
                txtTienKhachDua.setBackground(Color.red);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    public void donHang() {
        long tongTien = 0;
        int soDong = tblSanPhamChon.getRowCount();
        long giamGia = 0;
        if (soDong == 0) {
            lblTongTien.setText("0");
            lblGiamGia.setText("0");
            txtTienKhachDua.setText("0");
            lblTienThuaTraKhach.setText("0");
            lblThanhToan.setText("0");
        } else {
            for (int i = 0; i < tblSanPhamChon.getRowCount(); i++) {
                long donGia = XMoney.loaiBoVND(tblSanPhamChon.getValueAt(i, 2).toString());
                int soLuong = Integer.parseInt(tblSanPhamChon.getValueAt(i, 3).toString());
                tongTien += (soLuong * donGia);

                lblTongTien.setText(XMoney.themDauCham(tongTien));
                KhuyenMai km = kmService.selectGiamGia(tblSanPhamChon.getValueAt(i, 0).toString());
                if (km == null) {
                    giamGia += 0;
                } else {
                    if (km.getHinhThuc().equalsIgnoreCase("Giảm theo %")) {
                        float giaTriKM = km.getGiamGia();
                        giaTriKM = giaTriKM / 100;
                        float giatriGiam = giaTriKM * soLuong;
                        giamGia += (donGia * giatriGiam);
                    } else {
                        giamGia += (km.getGiamGia() * soLuong);
                    }
                }
                lblGiamGia.setText(XMoney.themDauCham(giamGia));
                lblThanhToan.setText(XMoney.themDauCham(tongTien - giamGia));
                long thanhToan = tongTien - giamGia;
                long tienKhachDua = XMoney.loaiBoDauCham(txtTienKhachDua.getText().trim());
                lblTienThuaTraKhach.setText(XMoney.themDauCham(tienKhachDua - thanhToan));
            }
        }
    }

    public void thanhToan() {
        if (txtTienKhachDua.getText().trim().equals("")) {
            txtTienKhachDua.setText("0");
        }
        HinhThucGiaoHang htgh = (HinhThucGiaoHang) cboHinhThucGiaoHang.getSelectedItem();
        HinhThucThanhToan httt = (HinhThucThanhToan) cboHinhThucTT.getSelectedItem();

        HoaDon hd = new HoaDon();
        hd.setMaHD(lblMaHoaDon.getText());
        hd.setMaKH(lblMaKH.getText());
        hd.setMaHTTT(httt.getMaHTTT());
        hd.setMaTTTT("TT002");
        hd.setMaHTGH(htgh.getMaHTGH());
        hd.setTienThuaTraKhach(XMoney.loaiBoDauCham(lblTienThuaTraKhach.getText()));
        hd.setTongTien(XMoney.loaiBoDauCham(lblTongTien.getText()));
        hd.setThanhToan(XMoney.loaiBoDauCham(lblThanhToan.getText()));
        hd.setGhiChu(txtghiChu.getText());
        try {
            if (lblMaHoaDon.getText().equals("Vui lòng tạo!")) {
                Msgbox.alert(this, "Vui lòng chọn hóa đơn trước khi nhấn thanh toán");
                return;
            } else if (tblSanPhamChon.getRowCount() == 0) {
                Msgbox.alert(this, "Vui lòng chọn sản phẩm trước khi nhấn thanh toán");
                return;
            } else {
                long thanhToan = XMoney.loaiBoDauCham(lblThanhToan.getText());
                long tienKhachDua = XMoney.loaiBoDauCham(txtTienKhachDua.getText().trim());
                long tienTraKhach = XMoney.loaiBoDauCham(lblTienThuaTraKhach.getText());

                if (Msgbox.confirm(this, "Bạn chắc chắn muốn thanh toán hóa đơn này chứ?")) {
                    if (tienKhachDua < thanhToan) {
                        Msgbox.alert(this, "Số tiền khách đưa không đủ để thanh toán");
                        txtTienKhachDua.setBackground(Color.red);
                        return;
                    } else {
                        txtTienKhachDua.setBackground(Color.white);
                        hdService.update(hd);
                        if (Msgbox.confirm(this, "Bạn muốn in hóa đơn này không ??")) {
                            xuatHoaDon();
                        }
                        lamMoi();
                        Msgbox.alert(this, "Thanh toán thành công!");
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
            Msgbox.alert(this, "Thanh toán thất bại");
        }
    }

    public void capNhatSoluongXoaAll() {
        for (int i = 0; i < tblSanPhamChon.getRowCount(); i++) {
            SanPhamChiTiet s = spService.selectByID(tblSanPhamChon.getValueAt(i, 0) + "");
            int soLuongMoi = (s.getSoLuong() + Integer.parseInt(tblSanPhamChon.getValueAt(i, 3) + ""));

            SanPhamChiTiet sp = new SanPhamChiTiet();
            sp.setSoLuong(soLuongMoi);
            sp.setMaSPCT(tblSanPhamChon.getValueAt(i, 0) + "");
            spService.updateBanHang(sp);
        }
    }

    public void capNhatSoLuongXoaSP() {
        row2 = tblSanPhamChon.getSelectedRow();
        SanPhamChiTiet s = spService.selectByID(tblSanPhamChon.getValueAt(row2, 0) + "");
        int soLuongMoi = (s.getSoLuong() + Integer.parseInt(tblSanPhamChon.getValueAt(row2, 3) + ""));

        SanPhamChiTiet sp = new SanPhamChiTiet();
        sp.setSoLuong(soLuongMoi);
        sp.setMaSPCT(tblSanPhamChon.getValueAt(row2, 0) + "");
        spService.updateBanHang(sp);
    }

    HoaDon getForm() {
        HinhThucGiaoHang htgh = (HinhThucGiaoHang) cboHinhThucGiaoHang.getSelectedItem();
        HinhThucThanhToan httt = (HinhThucThanhToan) cboHinhThucTT.getSelectedItem();

        HoaDon hd = new HoaDon();
        hd.setMaHD(lblMaHoaDon.getText());
        hd.setMaNV(Auth.user.getMaNV());
        hd.setMaKH(lblMaKH.getText());
        hd.setMaHTTT(httt.getMaHTTT());
        hd.setMaTTTT("TT001");
        hd.setMaHTGH(htgh.getMaHTGH());
        hd.setTienThuaTraKhach(0);
        hd.setTongTien(XMoney.loaiBoDauCham(lblTongTien.getText()));
        hd.setThanhToan(XMoney.loaiBoDauCham(lblThanhToan.getText()));
        hd.setGhiChu(txtghiChu.getText());
        return hd;
    }

    public void lamMoi() {
        model2.setRowCount(0);
        lblMaHoaDon.setText("Vui lòng tạo!");
        lblMaKH.setText("KH00");
        lblMaKH.setForeground(Color.red);
        lblTenKH.setText("Khách bán lẻ");
        lblTenKH.setForeground(Color.red);
        lblTongTien.setText("0");
        lblGiamGia.setText("0");
        txtTienKhachDua.setText("0");
        txtTienKhachDua.setBackground(Color.white);
        lblTienThuaTraKhach.setText("0");
        lblThanhToan.setText("0");
        cboHinhThucTT.setSelectedIndex(0);
        cboHinhThucGiaoHang.setSelectedIndex(0);
        txtghiChu.setText("");
        row2 = -1;
        showProductsDM();
        showHoaDonCho();
        btnTao.setEnabled(true);
        btnChon.setEnabled(false);
        btnThayDoi.setEnabled(false);
    }

    public void fillCboDanhMuc() {
        cboDanhMuc.addItem("   ");
        List<DanhMuc> list = dmService.selectAll();
        for (int i = 0; i < list.size(); i++) {
            cboDanhMuc.addItem(list.get(i).getTenDanhMuc());
        }
    }

    public void showProductsDM() {
        if (cboDanhMuc.getSelectedIndex() == 0) {
            fillTable();
        }
        if (cboDanhMuc.getSelectedIndex() > 0) {
            model1.setRowCount(0);
            List<SanPhamChiTiet> list = spService.selectByDM(cboDanhMuc.getSelectedItem() + "");
            for (SanPhamChiTiet x : list) {
                model1.addRow(new Object[]{
                    x.getMaSPCT(), x.getTenSP() + " " + x.getTenSPCT(), XMoney.themDauCham(x.getGiaBan()) + " VNĐ", "", x.getTenMauSac(), x.getTenChatLieu(), x.getChieuDai() + "cm X " + x.getChieuRong() + "cm X " + x.getChieuCao() + "cm",
                    x.getTheTich() + " Lít", x.getSoLuong()
                });
            }
            for (int i = 0; i < tblChonSanPham.getRowCount(); i++) {
                KhuyenMai km = kmService.selectGiamGia(tblChonSanPham.getValueAt(i, 0).toString());
                if (km == null) {
                    tblChonSanPham.setValueAt("0", i, 3);
                } else {
                    if (km.getHinhThuc().equalsIgnoreCase("Giảm theo %")) {
                        tblChonSanPham.setValueAt(km.getGiamGia() + "%", i, 3);
                    } else {
                        tblChonSanPham.setValueAt(XMoney.themDauCham(km.getGiamGia()) + " VNĐ", i, 3);
                    }
                }
            }
            txtTimKiem.setText("");
        }
    }

    public void luuHoaDon() {
        try {
            if (Msgbox.confirm(this, "Bạn muốn tạo hóa đơn mới ?")) {
                hdService.insert(getForm());
                lamMoi();
                Msgbox.alert(this, "Tạo hóa đơn thành công");
            }
        } catch (Exception e) {
            Msgbox.alert(this, "Tạo hóa đơn thất bại");
            e.printStackTrace();
        }
    }

    public void showHoaDonCho() {
        model3.setRowCount(0);
        List<HoaDon> list = hdService.selectByHDChoThanhToan();
        for (HoaDon x : list) {
            model3.addRow(new Object[]{
                x.getMaHD(), XDate.toString(x.getNgayLap()), x.getMaNV(), x.getTenKH()
            });
        }
    }

    public void fillCBOHinhThucThanhToan() {
        DefaultComboBoxModel<HinhThucThanhToan> model = (DefaultComboBoxModel) cboHinhThucTT.getModel();
        model.removeAllElements();
        List<HinhThucThanhToan> list = htttService.selectAll();
        for (HinhThucThanhToan x : list) {
            model.addElement(x);
        }
    }

    public void fillCBOHinhThucGiaoHang() {
        DefaultComboBoxModel<HinhThucGiaoHang> model = (DefaultComboBoxModel) cboHinhThucGiaoHang.getModel();
        model.removeAllElements();
        List<HinhThucGiaoHang> list = htghService.selectAll();
        for (HinhThucGiaoHang x : list) {
            model.addElement(x);
        }
    }

    public void fillTable() {
        model1.setRowCount(0);
        List<SanPhamChiTiet> list = spService.selectAll_BY_ONL();
        for (SanPhamChiTiet x : list) {
            model1.addRow(new Object[]{
                x.getMaSPCT(), x.getTenSP() + " " + x.getTenSPCT(), XMoney.themDauCham(x.getGiaBan()) + " VNĐ", "", x.getTenMauSac(), x.getTenChatLieu(), x.getChieuDai() + "cm X " + x.getChieuRong() + "cm X " + x.getChieuCao() + "cm",
                x.getTheTich() + " Lít", x.getSoLuong()
            });
        }
        for (int i = 0; i < tblChonSanPham.getRowCount(); i++) {
            KhuyenMai km = kmService.selectGiamGia(tblChonSanPham.getValueAt(i, 0).toString());
            if (km == null) {
                tblChonSanPham.setValueAt("0", i, 3);
            } else {
                if (km.getHinhThuc().equalsIgnoreCase("Giảm theo %")) {
                    tblChonSanPham.setValueAt(km.getGiamGia() + "%", i, 3);
                } else {
                    tblChonSanPham.setValueAt(XMoney.themDauCham(km.getGiamGia()) + " VNĐ", i, 3);
                }
            }
        }
    }

    public void clickHoaDonCho() {
        row3 = tblHoaDonCho.getSelectedRow();
        lblMaHoaDon.setText(tblHoaDonCho.getValueAt(row3, 0) + "");
        try {
            HoaDon hd = hdService.selectById(lblMaHoaDon.getText());
            if (hd.getMaKH().equals("KH00")) {
                lblMaKH.setText(hd.getMaKH());
                lblMaKH.setForeground(Color.red);
                lblTenKH.setText(hd.getTenKH());
                lblTenKH.setForeground(Color.red);
            } else {
                lblMaKH.setText(hd.getMaKH());
                lblMaKH.setForeground(Color.black);
                lblTenKH.setText(hd.getTenKH());
                lblTenKH.setForeground(Color.black);
            }
            
            lblTongTien.setText(XMoney.themDauCham(hd.getTongTien()));
            lblThanhToan.setText(XMoney.themDauCham(hd.getThanhToan()));
            lblGiamGia.setText(XMoney.themDauCham(hd.getTongTien() - hd.getThanhToan()));
            long tienKhachDua = XMoney.loaiBoDauCham(txtTienKhachDua.getText());
            long thanhToan =  XMoney.loaiBoDauCham(lblThanhToan.getText());
            txtTienKhachDua.setText("0");
            lblTienThuaTraKhach.setText(XMoney.themDauCham(tienKhachDua - thanhToan));
            cboHinhThucTT.setSelectedItem(hd.getTenHTTT());
            cboHinhThucGiaoHang.setSelectedItem(hd.getTenHTGH());

            model2.setRowCount(0);
            List<HoaDonChiTiet> list = hdctService.selectById(lblMaHoaDon.getText());
            for (HoaDonChiTiet x : list) {
                model2.addRow(new Object[]{
                    x.getMaSPCT(), x.getTenSP() + " " + x.getTenSPCT(), XMoney.themDauCham(x.getDonGia()) + " VNĐ", x.getSoLuong()
                });
            }
            btnTao.setEnabled(false);
            btnChon.setEnabled(true);
            btnThayDoi.setEnabled(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void showTTKH() {
        if (txtTienKhachDua.getText().trim().equals("")) {
            txtTienKhachDua.setText("0");
        }
        if (KhachHangJframe.maKH == null && KhachHangJframe.tenKH == null) {
            Msgbox.alert(this, "Vui lòng chọn khách hàng trước khi nhấn thay đổi!");
        } else {
            if (!KhachHangJframe.maKH.equals("KH00")) {
                lblMaKH.setText(KhachHangJframe.maKH);
                lblMaKH.setForeground(Color.black);
                lblTenKH.setText(KhachHangJframe.tenKH);
                lblTenKH.setForeground(Color.black);
            } else {
                lblMaKH.setText(KhachHangJframe.maKH);
                lblMaKH.setForeground(Color.red);
                lblTenKH.setText(KhachHangJframe.tenKH);
                lblTenKH.setForeground(Color.red);
            }
            capNhatHoaDon();
            KhachHangJframe.maKH = null;
            KhachHangJframe.tenKH = null;
            showHoaDonCho();
            for (int i = 0; i < tblHoaDonCho.getRowCount(); i++) {
                if (lblMaHoaDon.getText().equals(tblHoaDonCho.getValueAt(i, 0))) {
                    tblHoaDonCho.setRowSelectionInterval(i, i);
                }
            }
            Msgbox.alert(this, "Thay đổi thành công!");
        }
    }

    public void xuatHoaDon() {
        HoaDon hd = hdService.selectById(lblMaHoaDon.getText());
        try {
            XWPFDocument document = new XWPFDocument();
            FileOutputStream out = new FileOutputStream(new File("src/com/dienmaydo/pdf/" + lblMaHoaDon.getText() + ".docx"));

            XWPFParagraph paragraph = document.createParagraph();
            XWPFRun run = paragraph.createRun();
            paragraph.setAlignment(ParagraphAlignment.CENTER);
            run.setText("SIÊU THỊ ĐIỆN MÁY ĐỎ");
            run.setFontSize(20);
            run.setBold(true);

            XWPFParagraph paragraph2 = document.createParagraph();
            XWPFRun run2 = paragraph2.createRun();
            paragraph2.setAlignment(ParagraphAlignment.CENTER);
            run2.setText("ĐC: Phố Trịnh Văn Bô, Xuân Phương, Nam Từ Liêm, Hà Nội");

            XWPFParagraph paragraph3 = document.createParagraph();
            XWPFRun run3 = paragraph3.createRun();
            paragraph3.setAlignment(ParagraphAlignment.CENTER);
            run3.setText("ĐT: 0975.086.003");
            run3.setTextPosition(50);

            XWPFParagraph paragraph4 = document.createParagraph();
            XWPFRun run4 = paragraph4.createRun();
            paragraph4.setAlignment(ParagraphAlignment.CENTER);
            run4.setText("HÓA ĐƠN BÁN HÀNG");
            run4.setFontSize(30);
            run4.setBold(true);

            XWPFParagraph paragraph5 = document.createParagraph();
            XWPFRun run5 = paragraph5.createRun();
            paragraph5.setAlignment(ParagraphAlignment.CENTER);
            run5.setText("Hóa đơn số: " + hd.getMaHD());
            run5.setTextPosition(50);

            XWPFParagraph paragraph6 = document.createParagraph();
            XWPFRun run6 = paragraph6.createRun();
            run6.setText("Khách hàng: " + hd.getTenKH());

            XWPFParagraph paragraph7 = document.createParagraph();
            XWPFRun run7 = paragraph7.createRun();
            run7.setText("Địa chỉ: " + hd.getDiaChi());

            XWPFParagraph paragraph8 = document.createParagraph();
            XWPFRun run8 = paragraph8.createRun();
            run8.setText("SĐT: " + hd.getSdt());

            XWPFParagraph paragraph9 = document.createParagraph();
            XWPFRun run9 = paragraph9.createRun();
            run9.setText("Ngày lập: " + XDate.toString(hd.getNgayLap()));
            run9.setTextPosition(20);

            XWPFTable table = document.createTable(tblSanPhamChon.getRowCount() + 2, 5);
            table.setWidth("100%");

            XWPFTableRow row = table.getRow(0);
            XWPFParagraph paragraph10 = row.getCell(0).addParagraph();
            paragraph10.setAlignment(ParagraphAlignment.CENTER);
            XWPFRun run10 = paragraph10.createRun();
            run10.setText("Mã sản phẩm");
            run10.setBold(true);
            run10.setTextPosition(20);

            XWPFTableRow row2 = table.getRow(0);
            XWPFParagraph paragraph11 = row.getCell(1).addParagraph();
            paragraph11.setAlignment(ParagraphAlignment.CENTER);
            XWPFRun run11 = paragraph11.createRun();
            run11.setText("Tên sản phẩm");
            run11.setBold(true);
            run11.setTextPosition(20);

            XWPFTableRow row3 = table.getRow(0);
            XWPFParagraph paragraph12 = row.getCell(2).addParagraph();
            paragraph12.setAlignment(ParagraphAlignment.CENTER);
            XWPFRun run12 = paragraph12.createRun();
            run12.setText("Số lượng");
            run12.setBold(true);
            run12.setTextPosition(20);

            XWPFTableRow row4 = table.getRow(0);
            XWPFParagraph paragraph13 = row.getCell(3).addParagraph();
            paragraph13.setAlignment(ParagraphAlignment.CENTER);
            XWPFRun run13 = paragraph13.createRun();
            run13.setText("Đơn giá");
            run13.setBold(true);
            run13.setTextPosition(20);

            XWPFTableRow row5 = table.getRow(0);
            XWPFParagraph paragraph14 = row.getCell(4).addParagraph();
            paragraph14.setAlignment(ParagraphAlignment.CENTER);
            XWPFRun run14 = paragraph14.createRun();
            run14.setText("Thành tiền");
            run14.setBold(true);
            run14.setTextPosition(20);

            for (int i = 0; i < tblSanPhamChon.getRowCount(); i++) {
                table.getRow(i + 1).getCell(0).setText(tblSanPhamChon.getValueAt(i, 0).toString());
                table.getRow(i + 1).getCell(1).setText(tblSanPhamChon.getValueAt(i, 1).toString());
                table.getRow(i + 1).getCell(2).setText(tblSanPhamChon.getValueAt(i, 3).toString());
                table.getRow(i + 1).getCell(3).setText(tblSanPhamChon.getValueAt(i, 2).toString());
                table.getRow(i + 1).getCell(4).setText(XMoney.themDauCham(XMoney.loaiBoVND(tblSanPhamChon.getValueAt(i, 2) + "") * Integer.parseInt(tblSanPhamChon.getValueAt(i, 3) + "")) + " VNĐ");
            }

            int tongSL = 0;
            for (int i = 0; i < tblSanPhamChon.getRowCount(); i++) {
                tongSL += Integer.parseInt(tblSanPhamChon.getValueAt(i, 3) + "");
            }

            table.getRow(tblSanPhamChon.getRowCount() + 1).getCell(0).setText("TỔNG");
            table.getRow(tblSanPhamChon.getRowCount() + 1).getCell(1).setText("");
            table.getRow(tblSanPhamChon.getRowCount() + 1).getCell(2).setText(tongSL + "");
            table.getRow(tblSanPhamChon.getRowCount() + 1).getCell(3).setText("");
            table.getRow(tblSanPhamChon.getRowCount() + 1).getCell(4).setText(XMoney.themDauCham(hd.getTongTien()) + " VNĐ");

            XWPFParagraph paragraph22 = document.createParagraph();
            paragraph22.setAlignment(ParagraphAlignment.LEFT);

            XWPFParagraph paragraph21 = document.createParagraph();
            paragraph21.setAlignment(ParagraphAlignment.LEFT);
            XWPFRun run21 = paragraph21.createRun();
            run21.setText("GIẢM GIÁ: " + lblGiamGia.getText() + " VNĐ");
            run21.setBold(true);

            XWPFParagraph paragraph15 = document.createParagraph();
            paragraph15.setAlignment(ParagraphAlignment.LEFT);
            XWPFRun run20 = paragraph15.createRun();
            run20.setText("TỔNG TIỀN THANH TOÁN: " + lblThanhToan.getText() + " VNĐ");
            run20.setBold(true);

            XWPFParagraph paragraph24 = document.createParagraph();
            paragraph24.setAlignment(ParagraphAlignment.LEFT);
            XWPFRun run24 = paragraph24.createRun();
            run24.setText(cboHinhThucTT.getSelectedItem() + ": " + txtTienKhachDua.getText() + " VNĐ");

            XWPFParagraph paragraph25 = document.createParagraph();
            paragraph25.setAlignment(ParagraphAlignment.LEFT);
            XWPFRun run25 = paragraph25.createRun();
            run25.setText("Tiền trả lại: " + lblTienThuaTraKhach.getText() + " VNĐ");

            XWPFParagraph paragraph23 = document.createParagraph();
            paragraph23.setAlignment(ParagraphAlignment.RIGHT);
            XWPFRun run23 = paragraph23.createRun();
            run23.setText("------------------------------------------------------------------------------------------------------------------------------------------");

            XWPFParagraph paragraph16 = document.createParagraph();
            paragraph16.setAlignment(ParagraphAlignment.RIGHT);
            XWPFRun run16 = paragraph16.createRun();
            run16.setText("Người lập hóa đơn");
            run16.setBold(true);
            run16.setFontSize(15);

            XWPFParagraph paragraph17 = document.createParagraph();
            paragraph17.setAlignment(ParagraphAlignment.RIGHT);
            XWPFRun run17 = paragraph17.createRun();
            run17.setText(hd.getTenNV());
            run17.setTextPosition(80);

            XWPFParagraph paragraph18 = document.createParagraph();
            paragraph18.setAlignment(ParagraphAlignment.CENTER);
            XWPFRun run18 = paragraph18.createRun();
            run18.setText("Cảm ơn quý khách đã mua hàng!");

            XWPFParagraph paragraph19 = document.createParagraph();
            paragraph19.setAlignment(ParagraphAlignment.CENTER);
            XWPFRun run19 = paragraph19.createRun();
            run19.setText("Hẹn gặp lại!");

            document.write(out);
            out.close();
            document.close();

            System.out.println("Thành công");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void initWebcam() {
        Dimension size = WebcamResolution.QVGA.getSize();
        webcam = Webcam.getWebcams().get(0); //0 is default webcam
        webcam.setViewSize(size);

        panel = new WebcamPanel(webcam);
        panel.setPreferredSize(size);
        panel.setFPSDisplayed(true);

        jPanel8.add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 250, 150));
        executor.execute(this);
    }

    @Override
    public void run() {
        try {
            do {
                try {
                    Thread.sleep(100);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }

                Result result = null;
                BufferedImage image = null;

                if (webcam.isOpen()) {
                    if ((image = webcam.getImage()) == null) {
                        continue;
                    }
                }

                LuminanceSource source = new BufferedImageLuminanceSource(image);
                BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));

                try {
                    result = new MultiFormatReader().decode(bitmap);
                } catch (Exception e) {

                }

                if (result != null) {
                    model1.setRowCount(0);
                    SanPhamChiTiet x = spService.selectWebcam(result.getText());
                    model1.addRow(new Object[]{
                        x.getMaSPCT(), x.getTenSP() + " " + x.getTenSPCT(), XMoney.themDauCham(x.getGiaBan()) + " VNĐ", "", x.getTenMauSac(), x.getTenChatLieu(), x.getChieuDai() + "cm X " + x.getChieuRong() + "cm X " + x.getChieuCao() + "cm",
                        x.getTheTich() + " Lít", x.getSoLuong()
                    });
                    for (int i = 0; i < tblChonSanPham.getRowCount(); i++) {
                        KhuyenMai km = kmService.selectGiamGia(tblChonSanPham.getValueAt(i, 0).toString());
                        if (km == null) {
                            tblChonSanPham.setValueAt("0", i, 3);
                        } else {
                            if (km.getHinhThuc().equalsIgnoreCase("Giảm theo %")) {
                                tblChonSanPham.setValueAt(km.getGiamGia() + "%", i, 3);
                            } else {
                                tblChonSanPham.setValueAt(XMoney.themDauCham(km.getGiamGia()) + " VNĐ", i, 3);
                            }
                        }
                    }
                    cboDanhMuc.setSelectedIndex(0);

                }
            } while (true);
        } catch (Exception e) {

        }
    }

    @Override
    public Thread newThread(Runnable r) {
        Thread t = new Thread(r, "My Thread");
        t.setDaemon(true);
        return t;
    }

}
